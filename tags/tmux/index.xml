<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tmux on Caisong's Blog</title><link>https://caisong.github.io/tags/tmux/</link><description>Recent content in Tmux on Caisong's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 25 Dec 2024 21:41:36 +0800</lastBuildDate><atom:link href="https://caisong.github.io/tags/tmux/index.xml" rel="self" type="application/rss+xml"/><item><title>Tmux配置（复杂版）</title><link>https://caisong.github.io/posts/tmux%E9%85%8D%E7%BD%AE%E5%A4%8D%E6%9D%82%E7%89%88/</link><pubDate>Wed, 25 Dec 2024 21:41:36 +0800</pubDate><guid>https://caisong.github.io/posts/tmux%E9%85%8D%E7%BD%AE%E5%A4%8D%E6%9D%82%E7%89%88/</guid><description>&lt;p>&lt;strong>复杂版&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-config" data-lang="config"># : &amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;
# https://github.com/gpakosz/.tmux
# (‑●‑●)&amp;gt; dual licensed under the WTFPL v2 license and the MIT license,
# without any warranty.
# Copyright 2012— Gregory Pakosz (@gpakosz).
#
# ------------------------------------------------------------------------------
# /!\ DO NOT EDIT THIS FILE
# instead, override your .local customization file copy, see README.md /!\
# ------------------------------------------------------------------------------


# -- general -------------------------------------------------------------------

set -g default-terminal &amp;#34;screen-256color&amp;#34;
set -ga terminal-overrides &amp;#34;,*256col*:Tc&amp;#34;

setw -g xterm-keys on
set -s escape-time 10 # faster command sequences
set -sg repeat-time 600 # increase repeat timeout
set -s focus-events on

set -g prefix2 C-a # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -q -g status-utf8 on # expect UTF-8 (tmux &amp;lt; 2.2)
setw -q -g utf8 on

set -g history-limit 5000 # boost history

# edit configuration
bind e new-window -n &amp;#34;#{TMUX_CONF_LOCAL}&amp;#34; -e EDITOR=&amp;#34;$EDITOR&amp;#34; sh -c &amp;#39;case &amp;#34;${EDITOR:-vim}&amp;#34; in *vim*) ${EDITOR:-vim} -c &amp;#34;:set syntax=tmux&amp;#34; &amp;#34;$TMUX_CONF_LOCAL&amp;#34;;; *) $EDITOR &amp;#34;$TMUX_CONF_LOCAL&amp;#34;;; esac &amp;amp;&amp;amp; &amp;#34;$TMUX_PROGRAM&amp;#34; ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} source &amp;#34;$TMUX_CONF&amp;#34; \; display &amp;#34;$TMUX_CONF_LOCAL sourced&amp;#34;&amp;#39;

# reload configuration
bind r run &amp;#39;&amp;#34;$TMUX_PROGRAM&amp;#34; ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} source &amp;#34;$TMUX_CONF&amp;#34;&amp;#39; \; display &amp;#34;#{TMUX_CONF} sourced&amp;#34;


# -- display -------------------------------------------------------------------

set -g base-index 1 # start windows numbering at 1
setw -g pane-base-index 1 # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on # renumber windows when a window is closed

set -g set-titles on # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000 # slightly longer status messages display time

set -g status-interval 10 # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run &amp;#39;sleep 0.2&amp;#39; \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off


# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session &amp;#39;switch-client -t %%&amp;#39;

# session navigation
bind BTab switch-client -l # move to last session

# split current window horizontally
bind - split-window -v
# split current window vertically
bind _ split-window -h

# pane navigation
bind -r h select-pane -L # move left
bind -r j select-pane -D # move down
bind -r k select-pane -U # move up
bind -r l select-pane -R # move right
bind &amp;gt; swap-pane -D # swap current pane with the next one
bind &amp;lt; swap-pane -U # swap current pane with the previous one

# maximize current pane
bind + run &amp;#34;cut -c3- &amp;#39;#{TMUX_CONF}&amp;#39; | sh -s _maximize_pane &amp;#39;#{session_name}&amp;#39; &amp;#39;#D&amp;#39;&amp;#34;

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window # select next window
bind Tab last-window # move to last active window

# toggle mouse
bind m run &amp;#34;cut -c3- &amp;#39;#{TMUX_CONF}&amp;#39; | sh -s _toggle_mouse&amp;#34;


# -- facebook pathpicker -------------------------------------------------------

bind F run &amp;#34;cut -c3- &amp;#39;#{TMUX_CONF}&amp;#39; | sh -s _fpp &amp;#39;#{pane_id}&amp;#39; &amp;#39;#{pane_current_path}&amp;#39;&amp;#34;


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# copy to X11 clipboard
if -b &amp;#39;command -v xsel &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&amp;#39; &amp;#39;bind y run -b &amp;#34;\&amp;#34;\$TMUX_PROGRAM\&amp;#34; \${TMUX_SOCKET:+-S \&amp;#34;\$TMUX_SOCKET\&amp;#34;} save-buffer - | xsel -i -b&amp;#34;&amp;#39;
if -b &amp;#39;! command -v xsel &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; command -v xclip &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&amp;#39; &amp;#39;bind y run -b &amp;#34;\&amp;#34;\$TMUX_PROGRAM\&amp;#34; \${TMUX_SOCKET:+-S \&amp;#34;\$TMUX_SOCKET\&amp;#34;} save-buffer - | xclip -i -selection clipboard &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&amp;#34;&amp;#39;
# copy to Wayland clipboard
if -b &amp;#39;[ &amp;#34;$XDG_SESSION_TYPE&amp;#34; = &amp;#34;wayland&amp;#34; ] &amp;amp;&amp;amp; command -v wl-copy &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&amp;#39; &amp;#39;bind y run -b &amp;#34;\&amp;#34;\$TMUX_PROGRAM\&amp;#34; \${TMUX_SOCKET:+-S \&amp;#34;\$TMUX_SOCKET\&amp;#34;} save-buffer - | wl-copy&amp;#34;&amp;#39;
# copy to macOS clipboard
if -b &amp;#39;command -v pbcopy &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&amp;#39; &amp;#39;bind y run -b &amp;#34;\&amp;#34;\$TMUX_PROGRAM\&amp;#34; \${TMUX_SOCKET:+-S \&amp;#34;\$TMUX_SOCKET\&amp;#34;} save-buffer - | pbcopy&amp;#34;&amp;#39;
# copy to Windows clipboard
if -b &amp;#39;command -v clip.exe &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&amp;#39; &amp;#39;bind y run -b &amp;#34;\&amp;#34;\$TMUX_PROGRAM\&amp;#34; \${TMUX_SOCKET:+-S \&amp;#34;\$TMUX_SOCKET\&amp;#34;} save-buffer - | clip.exe&amp;#34;&amp;#39;
if -b &amp;#39;[ -c /dev/clipboard ]&amp;#39; &amp;#39;bind y run -b &amp;#34;\&amp;#34;\$TMUX_PROGRAM\&amp;#34; \${TMUX_SOCKET:+-S \&amp;#34;\$TMUX_SOCKET\&amp;#34;} save-buffer - &amp;gt; /dev/clipboard&amp;#34;&amp;#39;


# -- buffers -------------------------------------------------------------------

bind b list-buffers # list paste buffers
bind p paste-buffer -p # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from


# -- 8&amp;lt; ------------------------------------------------------------------------

%if #{==:#{TMUX_PROGRAM},}
 run &amp;#39;TMUX_PROGRAM=&amp;#34;$(LSOF=$(PATH=&amp;#34;$PATH:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&amp;#34; command -v lsof); $LSOF -b -w -a -d txt -p #{pid} -Fn 2&amp;gt;/dev/null | perl -n -e &amp;#34;if (s/^n((?:.(?!dylib$|so$))+)$/\1/g &amp;amp;&amp;amp; s/(?:\s+\([^\s]+?\))?$//g) { print; exit } } exit 1; {&amp;#34; || readlink &amp;#34;/proc/#{pid}/exe&amp;#34; 2&amp;gt;/dev/null)&amp;#34;; {[ -f &amp;#34;$TMUX_PROGRAM&amp;#34; ] &amp;amp;&amp;amp; [ -x &amp;#34;$TMUX_PROGRAM&amp;#34; ]} || TMUX_PROGRAM=&amp;#34;$(command -v tmux || printf tmux)&amp;#34;; &amp;#34;$TMUX_PROGRAM&amp;#34; -S #{socket_path} set-environment -g TMUX_PROGRAM &amp;#34;$TMUX_PROGRAM&amp;#34;&amp;#39;
%endif
%if #{==:#{TMUX_SOCKET},}
 run &amp;#39;&amp;#34;$TMUX_PROGRAM&amp;#34; -S #{socket_path} set-environment -g TMUX_SOCKET &amp;#34;#{socket_path}&amp;#34;&amp;#39;
%endif
%if #{==:#{TMUX_CONF},}
 run &amp;#39;&amp;#34;$TMUX_PROGRAM&amp;#34; set-environment -g TMUX_CONF $(for conf in &amp;#34;$HOME/.tmux.conf&amp;#34; &amp;#34;$XDG_CONFIG_HOME/tmux/tmux.conf&amp;#34; &amp;#34;$HOME/.config/tmux/tmux.conf&amp;#34;; do [ -f &amp;#34;$conf&amp;#34; ] &amp;amp;&amp;amp; printf &amp;#34;%s&amp;#34; &amp;#34;$conf&amp;#34; &amp;amp;&amp;amp; break; done)&amp;#39;
%endif
%if #{==:#{TMUX_CONF_LOCAL},}
 run &amp;#39;&amp;#34;$TMUX_PROGRAM&amp;#34; set-environment -g TMUX_CONF_LOCAL &amp;#34;$TMUX_CONF.local&amp;#34;&amp;#39;
%endif

run &amp;#39;&amp;#34;$TMUX_PROGRAM&amp;#34; source &amp;#34;$TMUX_CONF_LOCAL&amp;#34;&amp;#39;
run &amp;#39;cut -c3- &amp;#34;$TMUX_CONF&amp;#34; | sh -s _apply_configuration&amp;#39;

# EOF
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# unset GREP_OPTIONS
# export LC_NUMERIC=C
# # shellcheck disable=SC3041
# if (set +H 2&amp;gt;/dev/null); then
# set +H
# fi
#
# if ! printf &amp;#39;&amp;#39; | sed -E &amp;#39;s///&amp;#39; 2&amp;gt;/dev/null; then
# if printf &amp;#39;&amp;#39; | sed -r &amp;#39;s///&amp;#39; 2&amp;gt;/dev/null; then
# sed() {
# n=$#; while [ &amp;#34;$n&amp;#34; -gt 0 ]; do arg=$1; shift; case $arg in -E*) arg=-r${arg#-E};; esac; set -- &amp;#34;$@&amp;#34; &amp;#34;$arg&amp;#34;; n=$(( n - 1 )); done
# command sed &amp;#34;$@&amp;#34;
# }
# fi
# fi
#
# _uname_s=$(uname -s)
#
# [ -z &amp;#34;$TMUX&amp;#34; ] &amp;amp;&amp;amp; exit 255
# if [ -z &amp;#34;$TMUX_SOCKET&amp;#34; ]; then
# TMUX_SOCKET=$(printf &amp;#39;%s&amp;#39; &amp;#34;$TMUX&amp;#34; | cut -d, -f1)
# fi
# if [ -z &amp;#34;$TMUX_PROGRAM&amp;#34; ]; then
# TMUX_PID=$(printf &amp;#39;%s&amp;#39; &amp;#34;$TMUX&amp;#34; | cut -d, -f2)
# TMUX_PROGRAM=$(lsof -b -w -a -d txt -p &amp;#34;$TMUX_PID&amp;#34; -Fn 2&amp;gt;/dev/null | perl -n -e &amp;#34;if (s/^n((?:.(?!dylib$|so$))+)$/\1/g) { print; exit } } exit 1; {&amp;#34; || readlink &amp;#34;/proc/$TMUX_PID/exe&amp;#34; 2&amp;gt;/dev/null || printf tmux)
# fi
# if [ &amp;#34;$TMUX_PROGRAM&amp;#34; = &amp;#34;tmux&amp;#34; ]; then
# tmux() {
# command tmux ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} &amp;#34;$@&amp;#34;
# }
# else
# tmux() {
# &amp;#34;$TMUX_PROGRAM&amp;#34; ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} &amp;#34;$@&amp;#34;
# }
# fi
#
# _tmux_version=$(tmux -V | awk &amp;#39;{gsub(/[^0-9.]/, &amp;#34;&amp;#34;, $2); print ($2+0) * 100}&amp;#39;)
#
# _is_true() {
# [ &amp;#34;$1&amp;#34; = &amp;#34;true&amp;#34; ] || [ &amp;#34;$1&amp;#34; = &amp;#34;yes&amp;#34; ] || [ &amp;#34;$1&amp;#34; = &amp;#34;1&amp;#34; ]
# }
#
# _is_enabled() {
# [ &amp;#34;$1&amp;#34; = &amp;#34;enabled&amp;#34; ]
# }
#
# _is_disabled() {
# [ &amp;#34;$1&amp;#34; = &amp;#34;disabled&amp;#34; ]
# }
#
# _circled() {
# circled_digits=&amp;#39;⓪ ① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳&amp;#39;
# if [ &amp;#34;$1&amp;#34; -le 20 ] 2&amp;gt;/dev/null; then
# i=$(( $1 + 1 ))
# eval set -- &amp;#34;$circled_digits&amp;#34;
# eval echo &amp;#34;\${$i}&amp;#34;
# else
# echo &amp;#34;$1&amp;#34;
# fi
# }
#
# _decode_unicode_escapes() {
# printf &amp;#39;%s&amp;#39; &amp;#34;$*&amp;#34; | perl -CS -pe &amp;#39;s/(\\u([0-9A-Fa-f]{1,4})|\\U([0-9A-Fa-f]{1,8}))/chr(hex($2.$3))/eg&amp;#39; 2&amp;gt;/dev/null
# }
#
# if command -v pkill &amp;gt; /dev/null 2&amp;gt;&amp;amp;1; then
# _pkillf() {
# pkill -f &amp;#34;$@&amp;#34; || true
# }
# else
# case &amp;#34;$_uname_s&amp;#34; in
# *CYGWIN*)
# _pkillf() {
# while IFS= read -r pid; do
# kill &amp;#34;$pid&amp;#34; || true
# done &amp;lt;&amp;lt; EOF
# $(grep -Eao &amp;#34;$@&amp;#34; /proc/*/cmdline | xargs -0 | sed -E -n &amp;#39;s,/proc/([0-9]+)/.+$,\1,pg&amp;#39;)
# EOF
# }
# ;;
# *)
# # shellcheck disable=SC2009
# _pkillf() {
# while IFS= read -r pid; do
# kill &amp;#34;$pid&amp;#34; || true
# done &amp;lt;&amp;lt; EOF
# $(ps -x -o pid= -o command= | grep -E &amp;#34;$@&amp;#34; | cut -d&amp;#39; &amp;#39; -f1)
# EOF
# }
# ;;
# esac
# fi
#
# _bar() {
# bar_palette=$(printf &amp;#39;%s&amp;#39; &amp;#34;$1&amp;#34; | tr &amp;#39;;&amp;#39; &amp;#39;,&amp;#39;)
# bar_symbol_empty=$2
# bar_symbol_full=$3
# bar_length=$4
# bar_value=$5
#
# if [ &amp;#34;$bar_length&amp;#34; = &amp;#34;auto&amp;#34; ]; then
# columns=${6:-$(tmux -q display -p &amp;#39;#{client_width}&amp;#39; 2&amp;gt; /dev/null || echo 80)}
# if [ &amp;#34;$columns&amp;#34; -ge 160 ]; then
# bar_length=12
# elif [ &amp;#34;$columns&amp;#34; -ge 130 ]; then
# bar_length=10
# elif [ &amp;#34;$columns&amp;#34; -ge 120 ]; then
# bar_length=8
# elif [ &amp;#34;$columns&amp;#34; -ge 100 ]; then
# bar_length=6
# else
# bar_length=4
# fi
# fi
#
# if echo &amp;#34;$bar_palette&amp;#34; | grep -q -E &amp;#39;^heat|gradient(,[#a-z0-9]{7,9})?$&amp;#39;; then
# # shellcheck disable=SC2086
# { set -f; IFS=,; set -- $bar_palette; unset IFS; set +f; }
# palette_style=$1
# bg=${2:-none}
# [ &amp;#34;$palette_style&amp;#34; = &amp;#34;gradient&amp;#34; ] &amp;amp;&amp;amp; \
# palette=&amp;#34;196 202 208 214 220 226 190 154 118 82 46&amp;#34;
# [ &amp;#34;$palette_style&amp;#34; = &amp;#34;heat&amp;#34; ] &amp;amp;&amp;amp; \
# palette=&amp;#34;243 245 247 144 143 142 184 214 208 202 196&amp;#34;
#
# palette=$(echo &amp;#34;$palette&amp;#34; | awk -v n=&amp;#34;$bar_length&amp;#34; &amp;#39;{ for (i = 0; i &amp;lt; n; ++i) printf $(1 + (i * NF / n))&amp;#34; &amp;#34; }&amp;#39;)
# eval set -- &amp;#34;$palette&amp;#34;
#
# full=$(awk &amp;#34;BEGIN { printf \&amp;#34;%.0f\&amp;#34;, ($bar_value) * $bar_length }&amp;#34;)
# bar=&amp;#34;#[bg=$bg]&amp;#34;
# # shellcheck disable=SC2046
# [ &amp;#34;$full&amp;#34; -gt 0 ] &amp;amp;&amp;amp; \
# bar=&amp;#34;$bar$(printf &amp;#34;#[fg=colour%s]$bar_symbol_full&amp;#34; $(echo &amp;#34;$palette&amp;#34; | cut -d&amp;#39; &amp;#39; -f1-&amp;#34;$full&amp;#34;))&amp;#34;
# # shellcheck disable=SC2046
# empty=$((bar_length - full))
# # shellcheck disable=SC2046
# [ &amp;#34;$empty&amp;#34; -gt 0 ] &amp;amp;&amp;amp; \
# bar=&amp;#34;$bar$(printf &amp;#34;#[fg=colour%s]$bar_symbol_empty&amp;#34; $(echo &amp;#34;$palette&amp;#34; | cut -d&amp;#39; &amp;#39; -f$((full + 1))-$((full + empty))))&amp;#34;
# eval bar=&amp;#34;$bar#[fg=colour\${$((full == 0 ? 1 : full))}]&amp;#34;
# elif echo &amp;#34;$bar_palette&amp;#34; | grep -q -E &amp;#39;^(([#a-z0-9]{7,9}|none),?){3}$&amp;#39;; then
# # shellcheck disable=SC2086
# { set -f; IFS=,; set -- $bar_palette; unset IFS; set +f; }
# full_fg=$1
# empty_fg=$2
# bg=$3
#
# full=$(awk &amp;#34;BEGIN { printf \&amp;#34;%.0f\&amp;#34;, ($bar_value) * $bar_length }&amp;#34;)
# [ &amp;#34;$bg&amp;#34; != &amp;#34;none&amp;#34; ] &amp;amp;&amp;amp; \
# bar=&amp;#34;#[bg=$bg]&amp;#34;
# #shellcheck disable=SC2046
# [ &amp;#34;$full&amp;#34; -gt 0 ] &amp;amp;&amp;amp; \
# bar=&amp;#34;$bar#[fg=$full_fg]$(printf &amp;#34;%0.s$bar_symbol_full&amp;#34; $(seq 1 &amp;#34;$full&amp;#34;))&amp;#34;
# empty=$((bar_length - full))
# #shellcheck disable=SC2046
# [ &amp;#34;$empty&amp;#34; -gt 0 ] &amp;amp;&amp;amp; \
# bar=&amp;#34;$bar#[fg=$empty_fg]$(printf &amp;#34;%0.s$bar_symbol_empty&amp;#34; $(seq 1 &amp;#34;$empty&amp;#34;))&amp;#34; &amp;amp;&amp;amp; \
# bar=&amp;#34;$bar#[fg=$empty_fg]&amp;#34;
# fi
#
# printf &amp;#39;%s&amp;#39; &amp;#34;$bar&amp;#34;
# }
#
# _hbar() {
# hbar_palette=$(printf &amp;#39;%s&amp;#39; &amp;#34;$1&amp;#34; | tr &amp;#39;;&amp;#39; &amp;#39;,&amp;#39;)
# hbar_value=$2
#
# if echo &amp;#34;$hbar_palette&amp;#34; | grep -q -E &amp;#39;^heat|gradient(,[#a-z0-9]{7,9})?$&amp;#39;; then
# # shellcheck disable=SC2086
# { set -f; IFS=,; set -- $hbar_palette; unset IFS; set +f; }
# palette_style=$1
# [ &amp;#34;$palette_style&amp;#34; = &amp;#34;gradient&amp;#34; ] &amp;amp;&amp;amp; \
# palette=&amp;#34;196 202 208 214 220 226 190 154 118 82 46&amp;#34;
# [ &amp;#34;$palette_style&amp;#34; = &amp;#34;heat&amp;#34; ] &amp;amp;&amp;amp; \
# palette=&amp;#34;233 234 235 237 239 241 243 245 247 144 143 142 184 214 208 202 196&amp;#34;
#
# palette=$(echo &amp;#34;$palette&amp;#34; | awk -v n=8 &amp;#39;{ for (i = 0; i &amp;lt; n; ++i) printf $(1 + (i * NF / n))&amp;#34; &amp;#34; }&amp;#39;)
# eval set -- &amp;#34;$palette&amp;#34;
#
# full=$(awk &amp;#34;BEGIN { printf \&amp;#34;%.0f\&amp;#34;, ($hbar_value) * 8 }&amp;#34;)
# eval hbar_fg=&amp;#34;colour\${$((full == 0 ? 1 : full))}&amp;#34;
# elif echo &amp;#34;$hbar_palette&amp;#34; | grep -q -E &amp;#39;^([#a-z0-9]{7,9},?){3}$&amp;#39;; then
# # shellcheck disable=SC2086
# { set -f; IFS=,; set -- $hbar_palette; unset IFS; set +f; }
#
# # shellcheck disable=SC2046
# eval $(awk &amp;#34;BEGIN { printf \&amp;#34;hbar_fg=$%d\&amp;#34;, (($hbar_value) - 0.001) * $# + 1 }&amp;#34;)
# fi
#
# eval set -- &amp;#34;▏ ▎ ▍ ▌ ▋ ▊ ▉ █&amp;#34;
# # shellcheck disable=SC2046
# eval $(awk &amp;#34;BEGIN { printf \&amp;#34;hbar_symbol=$%d\&amp;#34;, ($hbar_value) * ($# - 1) + 1 }&amp;#34;)
# hbar=&amp;#34;#[bg=none]#[fg=${hbar_fg?}]${hbar_symbol?}&amp;#34;
#
# printf &amp;#39;%s&amp;#39; &amp;#34;$hbar&amp;#34;
# }
#
# _vbar() {
# vbar_palette=$(printf &amp;#39;%s&amp;#39; &amp;#34;$1&amp;#34; | tr &amp;#39;;&amp;#39; &amp;#39;,&amp;#39;)
# vbar_value=$2
#
# if echo &amp;#34;$vbar_palette&amp;#34; | grep -q -E &amp;#39;^heat|gradient(,[#a-z0-9]{7,9})?$&amp;#39;; then
# # shellcheck disable=SC2086
# { set -f; IFS=,; set -- $vbar_palette; unset IFS; set +f; }
# palette_style=$1
# [ &amp;#34;$palette_style&amp;#34; = &amp;#34;gradient&amp;#34; ] &amp;amp;&amp;amp; \
# palette=&amp;#34;196 202 208 214 220 226 190 154 118 82 46&amp;#34;
# [ &amp;#34;$palette_style&amp;#34; = &amp;#34;heat&amp;#34; ] &amp;amp;&amp;amp; \
# palette=&amp;#34;233 234 235 237 239 241 243 245 247 144 143 142 184 214 208 202 196&amp;#34;
#
# palette=$(echo &amp;#34;$palette&amp;#34; | awk -v n=8 &amp;#39;{ for (i = 0; i &amp;lt; n; ++i) printf $(1 + (i * NF / n))&amp;#34; &amp;#34; }&amp;#39;)
# eval set -- &amp;#34;$palette&amp;#34;
#
# full=$(awk &amp;#34;BEGIN { printf \&amp;#34;%.0f\&amp;#34;, ($vbar_value) * 8 }&amp;#34;)
# eval vbar_fg=&amp;#34;colour\${$((full == 0 ? 1 : full))}&amp;#34;
# elif echo &amp;#34;$vbar_palette&amp;#34; | grep -q -E &amp;#39;^([#a-z0-9]{7,9},?){3}$&amp;#39;; then
# # shellcheck disable=SC2086
# { set -f; IFS=,; set -- $vbar_palette; unset IFS; set +f; }
#
# # shellcheck disable=SC2046
# eval $(awk &amp;#34;BEGIN { printf \&amp;#34;vbar_fg=$%d\&amp;#34;, (($vbar_value) - 0.001) * $# + 1 }&amp;#34;)
# fi
#
# eval set -- &amp;#34;▁ ▂ ▃ ▄ ▅ ▆ ▇ █&amp;#34;
# # shellcheck disable=SC2046
# eval $(awk &amp;#34;BEGIN { printf \&amp;#34;vbar_symbol=$%d\&amp;#34;, ($vbar_value) * ($# - 1) + 1 }&amp;#34;)
# vbar=&amp;#34;#[bg=none]#[fg=${vbar_fg?}]${vbar_symbol?}&amp;#34;
#
# printf &amp;#39;%s&amp;#39; &amp;#34;$vbar&amp;#34;
# }
#
# _maximize_pane() {
# current_session=${1:-$(tmux display -p &amp;#39;#{session_name}&amp;#39;)}
# current_pane=${2:-$(tmux display -p &amp;#39;#{pane_id}&amp;#39;)}
#
# dead_panes=$(tmux list-panes -s -t &amp;#34;$current_session&amp;#34; -F &amp;#39;#{pane_dead} #{pane_id} #{pane_start_command}&amp;#39; | grep -E -o &amp;#39;^1 %.+maximized.+$&amp;#39; || true)
# restore=$(printf &amp;#34;%s&amp;#34; &amp;#34;$dead_panes&amp;#34; | sed -n -E -e &amp;#34;s/^1 $current_pane .+maximized.+&amp;#39;(%[0-9]+)&amp;#39;\&amp;#34;?$/tmux swap-pane -s \1 -t $current_pane \; kill-pane -t $current_pane/p&amp;#34;\
# -e &amp;#34;s/^1 (%[0-9]+) .+maximized.+&amp;#39;$current_pane&amp;#39;\&amp;#34;?$/tmux swap-pane -s \1 -t $current_pane \; kill-pane -t \1/p&amp;#34;)
#
# if [ -z &amp;#34;$restore&amp;#34; ]; then
# [ &amp;#34;$(tmux list-panes -t &amp;#34;$current_session:&amp;#34; | wc -l | sed &amp;#39;s/^ *//g&amp;#39;)&amp;#34; -eq 1 ] &amp;amp;&amp;amp; tmux display &amp;#34;Can&amp;#39;t maximize with only one pane&amp;#34; &amp;amp;&amp;amp; return
# info=$(tmux new-window -t &amp;#34;$current_session:&amp;#34; -F &amp;#34;#{session_name}:#{window_index}.#{pane_id}&amp;#34; -P &amp;#34;maximized... 2&amp;gt;/dev/null &amp;amp; \&amp;#34;$TMUX_PROGRAM\&amp;#34; ${TMUX_SOCKET:+-S \&amp;#34;$TMUX_SOCKET\&amp;#34;} setw -t \&amp;#34;$current_session:\&amp;#34; remain-on-exit on; printf \&amp;#34;\\033[\$(tput lines);0fPane has been maximized, press &amp;lt;prefix&amp;gt;+ to restore\n\&amp;#34; &amp;#39;$current_pane&amp;#39;&amp;#34;)
# session_window=${info%.*}
# new_pane=${info#*.}
#
# retry=20
# while [ &amp;#34;$(&amp;#34;$TMUX_PROGRAM&amp;#34; ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} list-panes -t &amp;#34;$session_window&amp;#34; -F &amp;#39;#{session_name}:#{window_index}.#{pane_id} #{pane_dead}&amp;#39; 2&amp;gt;/dev/null)&amp;#34; != &amp;#34;$info 1&amp;#34; ] &amp;amp;&amp;amp; [ &amp;#34;$retry&amp;#34; -ne 0 ]; do
# sleep 0.1
# retry=$((retry - 1))
# done
# if [ &amp;#34;$retry&amp;#34; -eq 0 ]; then
# tmux display &amp;#39;Unable to maximize pane&amp;#39;
# fi
#
# tmux setw -t &amp;#34;$session_window&amp;#34; remain-on-exit off \; swap-pane -s &amp;#34;$current_pane&amp;#34; -t &amp;#34;$new_pane&amp;#34;
# else
# $restore || tmux kill-pane
# fi
# }
#
# _toggle_mouse() {
# old=$(tmux show -gv mouse)
# new=&amp;#34;&amp;#34;
#
# if [ &amp;#34;$old&amp;#34; = &amp;#34;on&amp;#34; ]; then
# new=&amp;#34;off&amp;#34;
# else
# new=&amp;#34;on&amp;#34;
# fi
#
# tmux set -g mouse $new
# }
#
# _battery_info() {
# battery_count=0
# battery_charge=0
# case &amp;#34;$_uname_s&amp;#34; in
# *Darwin*)
# while IFS= read -r line; do
# [ -z &amp;#34;$line&amp;#34; ] &amp;amp;&amp;amp; continue
# percentage=$(printf &amp;#39;%s&amp;#39; &amp;#34;$line&amp;#34; | grep -E -o &amp;#39;[0-9]+%&amp;#39; || echo &amp;#34;0%&amp;#34;)
# battery_charge=$(awk -v charge=&amp;#34;$battery_charge&amp;#34; -v percentage=&amp;#34;${percentage%%%}&amp;#34; &amp;#39;BEGIN { print charge + percentage / 100 }&amp;#39;)
# battery_count=$((battery_count + 1))
# done &amp;lt;&amp;lt; EOF
# $(pmset -g batt | grep &amp;#39;InternalBattery&amp;#39;)
# EOF
# ;;
# *Linux*)
# while IFS= read -r batpath; do
# [ -z &amp;#34;$batpath&amp;#34; ] &amp;amp;&amp;amp; continue
# grep -i -q device &amp;#34;$batpath/scope&amp;#34; 2&amp;gt; /dev/null &amp;amp;&amp;amp; continue
#
# bat_capacity=&amp;#34;$batpath/capacity&amp;#34;
# if [ -r &amp;#34;$bat_capacity&amp;#34; ]; then
# battery_charge=$(awk -v charge=&amp;#34;$battery_charge&amp;#34; -v capacity=&amp;#34;$(cat &amp;#34;$bat_capacity&amp;#34;)&amp;#34; &amp;#39;BEGIN { print charge + (capacity &amp;gt; 100 ? 100 : capacity) / 100 }&amp;#39;)
# else
# bat_energy_full=&amp;#34;$batpath/energy_full&amp;#34;
# bat_energy_now=&amp;#34;$batpath/energy_now&amp;#34;
# if [ -r &amp;#34;$bat_energy_full&amp;#34; ] &amp;amp;&amp;amp; [ -r &amp;#34;$bat_energy_now&amp;#34; ]; then
# battery_charge=$(awk -v charge=&amp;#34;$battery_charge&amp;#34; -v energy_now=&amp;#34;$(cat &amp;#34;$bat_energy_now&amp;#34;)&amp;#34; -v energy_full=&amp;#34;$(cat &amp;#34;$bat_energy_full&amp;#34;)&amp;#34; &amp;#39;BEGIN { print charge + energy_now / energy_full }&amp;#39;)
# fi
# fi
# battery_count=$((battery_count + 1))
# done &amp;lt;&amp;lt; EOF
# $(find /sys/class/power_supply -maxdepth 1 -iname &amp;#39;*bat*&amp;#39;)
# EOF
# ;;
# *CYGWIN*|*MSYS*|*MINGW*)
# while IFS= read -r line; do
# [ -z &amp;#34;$line&amp;#34; ] &amp;amp;&amp;amp; continue
# battery_charge=$(printf &amp;#39;%s&amp;#39; &amp;#34;$line&amp;#34; | awk -v charge=&amp;#34;$battery_charge&amp;#34; &amp;#39;{ print charge + $2 / 100 }&amp;#39;)
# battery_count=$((battery_count + 1))
# done &amp;lt;&amp;lt; EOF
# $(wmic path Win32_Battery get BatteryStatus, EstimatedChargeRemaining 2&amp;gt; /dev/null | tr -d &amp;#39;\r&amp;#39; | tail -n +2 || true)
# EOF
# ;;
# *OpenBSD*)
# for batid in 0 1 2; do
# sysctl -n &amp;#34;hw.sensors.acpibat$batid.raw0&amp;#34; 2&amp;gt;&amp;amp;1 | grep -q &amp;#39;not found&amp;#39; &amp;amp;&amp;amp; continue
# if sysctl -n &amp;#34;hw.sensors.acpibat$batid&amp;#34; | grep -q amphour; then
# battery_charge=$(awk -v charge=&amp;#34;$battery_charge&amp;#34; -v remaining=&amp;#34;$(sysctl -n hw.sensors.acpibat$batid.amphour3 | cut -d&amp;#39; &amp;#39; -f1)&amp;#34; -v full=&amp;#34;$(sysctl -n hw.sensors.acpibat$batid.amphour0 | cut -d&amp;#39; &amp;#39; -f1)&amp;#34; &amp;#39;BEGIN { print charge + remaining / full }&amp;#39;)
# else
# battery_charge=$(awk -v charge=&amp;#34;$battery_charge&amp;#34; -v remaining=&amp;#34;$(sysctl -n hw.sensors.acpibat$batid.watthour3 | cut -d&amp;#39; &amp;#39; -f1)&amp;#34; -v full=&amp;#34;$(sysctl -n hw.sensors.acpibat$batid.watthour0 | cut -d&amp;#39; &amp;#39; -f1)&amp;#34; &amp;#39;BEGIN { print charge + remaining / full }&amp;#39;)
# fi
# battery_count=$((battery_count + 1))
# done
# ;;
# *FreeBSD*)
# battery_charge=$(awk -v charge=&amp;#34;$(sysctl -n &amp;#39;hw.acpi.battery.life&amp;#39;)&amp;#34; &amp;#39;BEGIN { print charge / 100 }&amp;#39;)
# battery_count=1
# ;;
# esac
# if [ &amp;#34;$battery_count&amp;#34; -ne 0 ]; then
# battery_charge=$(awk -v charge=&amp;#34;$battery_charge&amp;#34; -v count=&amp;#34;$battery_count&amp;#34; &amp;#39;BEGIN { print charge / count }&amp;#39;)
# fi
#
# if [ &amp;#34;$battery_charge&amp;#34; = 0 ]; then
# tmux set -ug &amp;#39;@battery_percentage&amp;#39; \;\
# set -ug &amp;#39;@battery_charge&amp;#39;
# else
# battery_percentage=&amp;#34;$(awk &amp;#34;BEGIN { printf \&amp;#34;%.0f%%\&amp;#34;, ($battery_charge) * 100 }&amp;#34;)&amp;#34;
#
# tmux set -g &amp;#39;@battery_percentage&amp;#39; &amp;#34;$battery_percentage&amp;#34; \;\
# set -g &amp;#39;@battery_charge&amp;#39; &amp;#34;$battery_charge&amp;#34;
# fi
# }
#
# _battery_status() {
# battery_status_charging=$1
# battery_status_discharging=$2
#
# case &amp;#34;$_uname_s&amp;#34; in
# *Darwin*)
# while IFS= read -r line; do
# [ -z &amp;#34;$line&amp;#34; ] &amp;amp;&amp;amp; continue
# battery_discharging=$(printf &amp;#39;%s&amp;#39; &amp;#34;$line&amp;#34; | grep -qi &amp;#34;discharging&amp;#34; &amp;amp;&amp;amp; echo &amp;#34;true&amp;#34; || echo &amp;#34;false&amp;#34;)
# done &amp;lt;&amp;lt; EOF
# $(pmset -g batt | grep &amp;#39;InternalBattery&amp;#39;)
# EOF
# ;;
# *Linux*)
# while IFS= read -r batpath; do
# [ -z &amp;#34;$batpath&amp;#34; ] &amp;amp;&amp;amp; continue
# grep -i -q device &amp;#34;$batpath/scope&amp;#34; 2&amp;gt; /dev/null &amp;amp;&amp;amp; continue
#
# battery_discharging=$(grep -qi &amp;#34;discharging&amp;#34; &amp;#34;$batpath/status&amp;#34; &amp;amp;&amp;amp; echo &amp;#34;true&amp;#34; || echo &amp;#34;false&amp;#34;)
# done &amp;lt;&amp;lt; EOF
# $(find /sys/class/power_supply -maxdepth 1 -iname &amp;#39;*bat*&amp;#39;)
# EOF
# ;;
# *CYGWIN*|*MSYS*|*MINGW*)
# while IFS= read -r line; do
# [ -z &amp;#34;$line&amp;#34; ] &amp;amp;&amp;amp; continue
# battery_discharging=$(printf &amp;#39;%s&amp;#39; &amp;#34;$line&amp;#34; | awk &amp;#39;{ s = ($1 == 1) ? &amp;#34;true&amp;#34; : &amp;#34;false&amp;#34;; print s }&amp;#39;)
# done &amp;lt;&amp;lt; EOF
# $(wmic path Win32_Battery get BatteryStatus, EstimatedChargeRemaining 2&amp;gt; /dev/null | tr -d &amp;#39;\r&amp;#39; | tail -n +2 || true)
# EOF
# ;;
# *OpenBSD*)
# for batid in 0 1 2; do
# battery_discharging=$(sysctl -n &amp;#34;hw.sensors.acpibat$batid.raw0&amp;#34; | grep -q 1 &amp;amp;&amp;amp; echo &amp;#34;true&amp;#34; || echo &amp;#34;false&amp;#34;)
# done
# ;;
# *FreeBSD*)
# battery_discharging=$(sysctl -n &amp;#39;hw.acpi.battery.state&amp;#39; | grep -q 1 &amp;amp;&amp;amp; echo &amp;#34;true&amp;#34; || echo &amp;#34;false&amp;#34;)
# ;;
# esac
#
# if [ -z &amp;#34;$battery_discharging&amp;#34; ]; then
# tmux set -ug &amp;#39;@battery_status&amp;#39;
# return
# fi
#
# if [ &amp;#34;$battery_discharging&amp;#34; = &amp;#34;true&amp;#34; ]; then
# battery_status=&amp;#34;$battery_status_discharging&amp;#34;
# else
# battery_status=&amp;#34;$battery_status_charging&amp;#34;
# fi
#
# tmux set -g &amp;#39;@battery_status&amp;#39; &amp;#34;$battery_status&amp;#34;
# }
#
# _pane_info() {
# pane_pid=&amp;#34;$1&amp;#34;
# pane_tty=&amp;#34;${2##/dev/}&amp;#34;
# case &amp;#34;$_uname_s&amp;#34; in
# *CYGWIN*)
# ps -al | tail -n +2 | awk -v pane_pid=&amp;#34;$pane_pid&amp;#34; -v tty=&amp;#34;$pane_tty&amp;#34; &amp;#39;
# ((/ssh/ &amp;amp;&amp;amp; !/-W/ &amp;amp;&amp;amp; !/tsh proxy ssh/ &amp;amp;!/sss_ssh_knownhostsproxy/) || !/ssh/) &amp;amp;&amp;amp; !/tee/ &amp;amp;&amp;amp; $5 == tty {
# user[$1] = $6; if (!child[$2]) child[$2] = $1
# }
# END {
# pid = pane_pid
# while (child[pid])
# pid = child[pid]
#
# file = &amp;#34;/proc/&amp;#34; pid &amp;#34;/cmdline&amp;#34;; getline command &amp;lt; file; close(file)
# gsub(/\0/, &amp;#34; &amp;#34;, command)
# &amp;#34;id -un &amp;#34; user[pid] | getline username
# print pid&amp;#34;:&amp;#34;username&amp;#34;:&amp;#34;command
# }
# &amp;#39;
# ;;
# *Linux*)
# ps -t &amp;#34;$pane_tty&amp;#34; --sort=lstart -o user=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -o pid= -o ppid= -o command= | awk -v pane_pid=&amp;#34;$pane_pid&amp;#34; &amp;#39;
# ((/ssh/ &amp;amp;&amp;amp; !/-W/ &amp;amp;&amp;amp; !/tsh proxy ssh/ &amp;amp;&amp;amp; !/sss_ssh_knownhostsproxy/) || !/ssh/) &amp;amp;&amp;amp; !/tee/ {
# user[$2] = $1; if (!child[$3]) child[$3] = $2; pid=$2; $1 = $2 = $3 = &amp;#34;&amp;#34;; command[pid] = substr($0,4)
# }
# END {
# pid = pane_pid
# while (child[pid])
# pid = child[pid]
#
# print pid&amp;#34;:&amp;#34;user[pid]&amp;#34;:&amp;#34;command[pid]
# }
# &amp;#39;
# ;;
# *)
# ps -t &amp;#34;/dev/$pane_tty&amp;#34; -o user=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -o pid= -o ppid= -o command= | awk -v pane_pid=&amp;#34;$pane_pid&amp;#34; &amp;#39;
# ((/ssh/ &amp;amp;&amp;amp; !/-W/ &amp;amp;&amp;amp; !/tsh proxy ssh/ &amp;amp;&amp;amp; !/sss_ssh_knownhostsproxy/) || !/ssh/) &amp;amp;&amp;amp; !/tee/ {
# user[$2] = $1; if (!child[$3]) child[$3] = $2; pid=$2; $1 = $2 = $3 = &amp;#34;&amp;#34;; command[pid] = substr($0,4)
# }
# END {
# pid = pane_pid
# while (child[pid])
# pid = child[pid]
#
# print pid&amp;#34;:&amp;#34;user[pid]&amp;#34;:&amp;#34;command[pid]
# }
# &amp;#39;
# ;;
# esac
# }
#
# _ssh_or_mosh_args() {
# case &amp;#34;$1&amp;#34; in
# *ssh*)
# args=$(printf &amp;#39;%s&amp;#39; &amp;#34;$1&amp;#34; | perl -n -e &amp;#39;print if s/.*?\bssh[\w_-]*\s*(.*)/\1/&amp;#39;)
# ;;
# *mosh-client*)
# args=$(printf &amp;#39;%s&amp;#39; &amp;#34;$1&amp;#34; | sed -E -e &amp;#39;s/.*mosh-client -# (.*)\|.*$/\1/&amp;#39; -e &amp;#39;s/-[^ ]*//g&amp;#39; -e &amp;#39;s/\d:\d//g&amp;#39;)
# ;;
# esac
#
# printf &amp;#39;%s&amp;#39; &amp;#34;$args&amp;#34;
# }
#
# _username() {
# pane_pid=${1:-$(tmux display -p &amp;#39;#{pane_pid}&amp;#39;)}
# pane_tty=${2:-$(tmux display -p &amp;#39;#{b:pane_tty}&amp;#39;)}
# ssh_only=$3
#
# pane_info=$(_pane_info &amp;#34;$pane_pid&amp;#34; &amp;#34;$pane_tty&amp;#34;)
# command=${pane_info#*:}
# command=${command#*:}
#
# ssh_or_mosh_args=$(_ssh_or_mosh_args &amp;#34;$command&amp;#34;)
# if [ -n &amp;#34;$ssh_or_mosh_args&amp;#34; ]; then
# # shellcheck disable=SC2086
# username=$(ssh -G $ssh_or_mosh_args 2&amp;gt;/dev/null | awk &amp;#39;/^user / { print $2; exit }&amp;#39;)
# # shellcheck disable=SC2086
# [ -z &amp;#34;$username&amp;#34; ] &amp;amp;&amp;amp; username=$(ssh $ssh_or_mosh_args -T -o ControlPath=none -o ProxyCommand=&amp;#34;sh -c &amp;#39;echo %%username%% %r &amp;gt;&amp;amp;2&amp;#39;&amp;#34; 2&amp;gt;&amp;amp;1 | awk &amp;#39;/^%username% / { print $2; exit }&amp;#39;)
# # shellcheck disable=SC2086
# [ -z &amp;#34;$username&amp;#34; ] &amp;amp;&amp;amp; username=$(ssh $ssh_or_mosh_args -v -T -o ControlPath=none -o ProxyCommand=false -o IdentityFile=&amp;#39;%%username%%/%r&amp;#39; 2&amp;gt;&amp;amp;1 | awk &amp;#39;/%username%/ { print substr($4,12); exit }&amp;#39;)
# else
# if ! _is_true &amp;#34;$ssh_only&amp;#34;; then
# username=${pane_info#*:}
# username=${username%%:*}
# fi
# fi
#
# printf &amp;#39;%s\n&amp;#39; &amp;#34;$username&amp;#34;
# }
#
# _hostname() {
# pane_pid=${1:-$(tmux display -p &amp;#39;#{pane_pid}&amp;#39;)}
# pane_tty=${2:-$(tmux display -p &amp;#39;#{b:pane_tty}&amp;#39;)}
# ssh_only=$3
# full=$4
# h_or_H=$5
#
# pane_info=$(_pane_info &amp;#34;$pane_pid&amp;#34; &amp;#34;$pane_tty&amp;#34;)
# command=${pane_info#*:}
# command=${command#*:}
#
# ssh_or_mosh_args=$(_ssh_or_mosh_args &amp;#34;$command&amp;#34;)
# if [ -n &amp;#34;$ssh_or_mosh_args&amp;#34; ]; then
# # shellcheck disable=SC2086
# hostname=$(ssh -G $ssh_or_mosh_args 2&amp;gt;/dev/null | awk &amp;#39;/^hostname / { print $2; exit }&amp;#39;)
# # shellcheck disable=SC2086
# [ -z &amp;#34;$hostname&amp;#34; ] &amp;amp;&amp;amp; hostname=$(ssh -T -o ControlPath=none -o ProxyCommand=&amp;#34;sh -c &amp;#39;echo %%hostname%% %h &amp;gt;&amp;amp;2&amp;#39;&amp;#34; $ssh_or_mosh_args 2&amp;gt;&amp;amp;1 | awk &amp;#39;/^%hostname% / { print $2; exit }&amp;#39;)
#
# if ! _is_true &amp;#34;$full&amp;#34;; then
# case &amp;#34;$hostname&amp;#34; in
# *[a-z-].*)
# hostname=${hostname%%.*}
# ;;
# 127.0.0.1)
# hostname=&amp;#34;localhost&amp;#34;
# ;;
# esac
# fi
# else
# if ! _is_true &amp;#34;$ssh_only&amp;#34;; then
# hostname=&amp;#34;$h_or_H&amp;#34;
# fi
# fi
#
# printf &amp;#39;%s\n&amp;#39; &amp;#34;$hostname&amp;#34;
# }
#
# _root() {
# pane_pid=${1:-$(tmux display -p &amp;#39;#{pane_pid}&amp;#39;)}
# pane_tty=${2:-$(tmux display -p &amp;#39;#{b:pane_tty}&amp;#39;)}
# root=$3
#
# username=$(_username &amp;#34;$pane_pid&amp;#34; &amp;#34;$pane_tty&amp;#34; false)
#
# [ &amp;#34;$username&amp;#34; = &amp;#34;root&amp;#34; ] &amp;amp;&amp;amp; echo &amp;#34;$root&amp;#34;
# }
#
# _uptime() {
# case &amp;#34;$_uname_s&amp;#34; in
# *Darwin*|*FreeBSD*)
# boot=$(sysctl -n kern.boottime 2&amp;gt;/dev/null | awk -F&amp;#39;[ ,:]+&amp;#39; &amp;#39;{ print $4 }&amp;#39;)
# now=$(date +%s)
# ;;
# *Linux*|*CYGWIN*|*MSYS*|*MINGW*)
# boot=0
# now=$(cut -d&amp;#39; &amp;#39; -f1 &amp;lt; /proc/uptime)
# ;;
# *OpenBSD*)
# boot=$(sysctl -n kern.boottime)
# now=$(date +%s)
# esac
# # shellcheck disable=SC1004
# awk -v tmux=&amp;#34;$TMUX_PROGRAM ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;}&amp;#34; -v boot=&amp;#34;$boot&amp;#34; -v now=&amp;#34;$now&amp;#34; &amp;#39;
# BEGIN {
# uptime = now - boot
# y = int(uptime / 31536000)
# dy = int(uptime / 86400) % 365
# d = int(uptime / 86400)
# h = int(uptime / 3600) % 24
# m = int(uptime / 60) % 60
# s = int(uptime) % 60
#
# system(tmux &amp;#34; set -g @uptime_y &amp;#34; y + 0 &amp;#34; \\;&amp;#34; \
# &amp;#34; set -g @uptime_dy &amp;#34; dy + 0 &amp;#34; \\;&amp;#34; \
# &amp;#34; set -g @uptime_d &amp;#34; d + 0 &amp;#34; \\;&amp;#34; \
# &amp;#34; set -g @uptime_h &amp;#34; h + 0 &amp;#34; \\;&amp;#34; \
# &amp;#34; set -g @uptime_m &amp;#34; m + 0 &amp;#34; \\;&amp;#34; \
# &amp;#34; set -g @uptime_s &amp;#34; s + 0)
# }&amp;#39;
# }
#
# _loadavg() {
# case &amp;#34;$_uname_s&amp;#34; in
# *Darwin*|*FreeBSD*)
# tmux set -g @loadavg &amp;#34;$(sysctl -n vm.loadavg 2&amp;gt;/dev/null | cut -d&amp;#39; &amp;#39; -f2)&amp;#34;
# ;;
# *Linux*|*CYGWIN*)
# tmux set -g @loadavg &amp;#34;$(cut -d&amp;#39; &amp;#39; -f1 &amp;lt; /proc/loadavg)&amp;#34;
# ;;
# *OpenBSD*)
# tmux set -g @loadavg &amp;#34;$(sysctl -n vm.loadavg 2&amp;gt;/dev/null | cut -d&amp;#39; &amp;#39; -f1)&amp;#34;
# ;;
# esac
# }
#
# _new_window_ssh() {
# pane_pid=${1:-$(tmux display -p &amp;#39;#{pane_pid}&amp;#39;)}
# pane_tty=${2:-$(tmux display -p &amp;#39;#{b:pane_tty}&amp;#39;)}
# shift 2
#
# pane_info=$(_pane_info &amp;#34;$pane_pid&amp;#34; &amp;#34;$pane_tty&amp;#34;)
# command=${pane_info#*:}
# command=${command#*:}
#
# case &amp;#34;$command&amp;#34; in
# *mosh-client*)
# # shellcheck disable=SC2046
# tmux new-window &amp;#34;$@&amp;#34; mosh $(echo &amp;#34;$command&amp;#34; | sed -E -e &amp;#39;s/.*mosh-client -# (.*)\|.*$/\1/&amp;#39;)
# ;;
# *ssh*)
# # shellcheck disable=SC2046
# tmux new-window &amp;#34;$@&amp;#34; $(echo &amp;#34;$command&amp;#34; | sed -e &amp;#39;s/;/\\;/g&amp;#39;)
# ;;
# *)
# tmux new-window &amp;#34;$@&amp;#34;
# esac
# }
#
# _new_window() {
# _new_window_ssh &amp;#34;$@&amp;#34;
# }
#
# _split_window_ssh() {
# pane_pid=${1:-$(tmux display -p &amp;#39;#{pane_pid}&amp;#39;)}
# pane_tty=${2:-$(tmux display -p &amp;#39;#{b:pane_tty}&amp;#39;)}
# shift 2
#
# pane_info=$(_pane_info &amp;#34;$pane_pid&amp;#34; &amp;#34;$pane_tty&amp;#34;)
# command=${pane_info#*:}
# command=${command#*:}
#
# case &amp;#34;$command&amp;#34; in
# *mosh-client*)
# # shellcheck disable=SC2046
# tmux split-window &amp;#34;$@&amp;#34; mosh $(echo &amp;#34;$command&amp;#34; | sed -E -e &amp;#39;s/.*mosh-client -# (.*)\|.*$/\1/&amp;#39;)
# ;;
# *ssh*)
# # shellcheck disable=SC2046
# tmux split-window &amp;#34;$@&amp;#34; $(echo &amp;#34;$command&amp;#34; | sed -e &amp;#39;s/;/\\;/g&amp;#39;)
# ;;
# *)
# tmux split-window &amp;#34;$@&amp;#34;
# esac
# }
#
# _split_window() {
# _split_window_ssh &amp;#34;$@&amp;#34;
# }
#
# _apply_tmux_256color() {
# case &amp;#34;$(tmux show -gv default-terminal)&amp;#34; in
# tmux-256color|tmux-direct)
# return
# ;;
# esac
#
# # when tmux-256color is available, use it
# # on macOS though, make sure to use /usr/bin/infocmp to probe if it&amp;#39;s availalbe system wide
# case &amp;#34;$_uname_s&amp;#34; in
# *Darwin*)
# if /usr/bin/infocmp -x tmux-256color &amp;gt; /dev/null 2&amp;gt;&amp;amp;1; then
# tmux set -g default-terminal &amp;#39;tmux-256color&amp;#39;
# fi
# ;;
# *)
# if command infocmp -x tmux-256color &amp;gt; /dev/null 2&amp;gt;&amp;amp;1; then
# tmux set -g default-terminal &amp;#39;tmux-256color&amp;#39;
# fi
# ;;
# esac
# }
#
# _apply_24b() {
# tmux_conf_theme_24b_colour=${tmux_conf_theme_24b_colour:-auto}
# tmux_conf_24b_colour=${tmux_conf_24b_colour:-$tmux_conf_theme_24b_colour}
# if [ &amp;#34;$tmux_conf_24b_colour&amp;#34; = &amp;#34;auto&amp;#34; ]; then
# case &amp;#34;$COLORTERM&amp;#34; in
# truecolor|24bit)
# apply_24b=true
# ;;
# esac
# if [ &amp;#34;$apply_24b&amp;#34; = &amp;#34;&amp;#34; ] &amp;amp;&amp;amp; [ &amp;#34;$(tput colors)&amp;#34; = &amp;#34;16777216&amp;#34; ]; then
# apply_24b=true
# fi
# elif _is_true &amp;#34;$tmux_conf_24b_colour&amp;#34;; then
# apply_24b=true
# fi
# if [ &amp;#34;$apply_24b&amp;#34; = &amp;#34;true&amp;#34; ]; then
# case &amp;#34;$TERM&amp;#34; in
# screen-*|tmux-*)
# ;;
# *)
# tmux set-option -ga terminal-overrides &amp;#34;,*256col*:Tc&amp;#34;
# ;;
# esac
# fi
# }
#
# _apply_bindings() {
# cfg=$(mktemp) &amp;amp;&amp;amp; trap &amp;#39;rm -f $cfg*&amp;#39; EXIT
#
# tmux_conf_preserve_stock_bindings=${tmux_conf_preserve_stock_bindings:-false}
# tmux list-keys | grep -vF &amp;#39;TMUX_CONF_LOCAL&amp;#39; | grep -E &amp;#39;new-window|split(-|_)window|new-session|copy-selection|copy-pipe&amp;#39; &amp;gt; &amp;#34;$cfg&amp;#34;
# if _is_true &amp;#34;$tmux_conf_preserve_stock_bindings&amp;#34;; then
# probe_socket=&amp;#34;$(dirname &amp;#34;$TMUX_SOCKET&amp;#34;)/tmux-stock-bindings-$$&amp;#34;
# TMUX_SOCKET=&amp;#34;$probe_socket&amp;#34; tmux -f /dev/null list-keys &amp;gt;&amp;gt; &amp;#34;$cfg&amp;#34;
# rm -f &amp;#34;%probe_socket&amp;#34;
# fi
#
# # tmux 3.0 doesn&amp;#39;t include 02254d1e5c881be95fd2fc37b4c4209640b6b266 and the
# # output of list-keys can be truncated
# perl -p -i -e &amp;#34;s/&amp;#39;#\{\?window_zoomed_flag,Unzoom,Zoom\}&amp;#39; &amp;#39;z&amp;#39; \{resize-pane -$/&amp;#39;#{?window_zoomed_flag,Unzoom,Zoom}&amp;#39; &amp;#39;z&amp;#39; {resize-pane -Z}\&amp;#34;/g&amp;#34; &amp;#34;$cfg&amp;#34;
#
# tmux_conf_new_window_retain_current_path=${tmux_conf_new_window_retain_current_path:-true}
# if ! _is_disabled &amp;#34;$tmux_conf_new_window_retain_current_path&amp;#34;; then
# perl -p -i -e &amp;#34;
# s/\brun-shell\b\s+(\&amp;#34;|&amp;#39;)cut\s+-c3-\s+(.+?)\s+\|\s+sh\s+-s\s+_new_window\s+#\{pane_pid\}\s+#\{b:pane_tty\}([^\n\1]*?)(?:\s+-c\s+((?:\\\\{1,3}\&amp;#34;)?|\&amp;#34;?|&amp;#39;?)#\{pane_current_path\}\4)([^\n\1]*?)\1/run-shell \1cut -c3- \2 | sh -s _new_window #\{pane_pid\} #\{b:pane_tty\}\3\5\1/g
# ;
# s/\brun-shell\b\s+(\&amp;#34;|&amp;#39;)cut\s+-c3-\s+.+?\s+\|\s+sh\s+-s\s+_new_window\s+#\{pane_pid\}\s+#\{b:pane_tty\}(\s+.+?)?\1/new-window\2/g
# ;
# s/\bnew-window\b([^;}\n]*?)(?:\s+-c\s+((?:\\\\\&amp;#34;)?|\&amp;#34;?|&amp;#39;?)#\{pane_current_path\}\2)/new-window\1/g&amp;#34; \
# &amp;#34;$cfg&amp;#34;
# fi
#
# perl -p -i -e &amp;#34;
# s,\bnew-window\b((?:(?:[ \t]+-[bdfhIvP])|(?:[ \t]+-[celtF][ \t]+(?!\bssh\b)[^\s]+))*)?(?:\s+(\bssh\b))((?:(?:[ \t]+-[bdfhIvP])|(?:[ \t]+-[celtF][ \t]+(?!\bssh\b)[^\s]+))*)?,run-shell &amp;#39;cut -c3- \&amp;#34;$TMUX_CONF\&amp;#34; | sh -s _new_window_ssh #\{pane_pid\} #\{b:pane_tty\}\1&amp;#39;,g if /\bnew-window\b((?:(?:[ \t]+-[bdfhIvP])|(?:[ \t]+-[celtF][ \t]+(?!ssh)[^\s]+))*)?(?:\s+(ssh))((?:(?:[ \t]+-[bdfhIvP])|(?:[ \t]+-[celtF][ \t]+(?!ssh)[^\s]+))*)?/&amp;#34;\
# &amp;#34;$cfg&amp;#34;
#
# tmux_conf_new_window_reconnect_ssh=${tmux_conf_new_window_reconnect_ssh:-false}
# if ! _is_disabled &amp;#34;$tmux_conf_new_window_reconnect_ssh&amp;#34; &amp;amp;&amp;amp; _is_true &amp;#34;$tmux_conf_new_window_reconnect_ssh&amp;#34;; then
# perl -p -i -e &amp;#34;s,\bnew-window\b([^;}\n\&amp;#34;]*),run-shell &amp;#39;cut -c3- \&amp;#34;$TMUX_CONF\&amp;#34; | sh -s _new_window #\{pane_pid\} #\{b:pane_tty\}\1&amp;#39;,g&amp;#34; &amp;#34;$cfg&amp;#34;
# fi
#
# tmux_conf_new_window_retain_current_path=${tmux_conf_new_window_retain_current_path:-false}
# if ! _is_disabled &amp;#34;$tmux_conf_new_window_retain_current_path&amp;#34; &amp;amp;&amp;amp; _is_true &amp;#34;$tmux_conf_new_window_retain_current_path&amp;#34;; then
# perl -p -i -e &amp;#34;
# s/\bnew-window\b(?!\s+(?:-|}))/{$&amp;amp;}/g if /\bdisplay-menu\b/
# ;
# s/\bnew-window\b/new-window -c &amp;#39;#{pane_current_path}&amp;#39;/g
# ;
# s/\brun-shell\b\s+&amp;#39;cut\s+-c3-\s+(.+?)\s+\|\s+sh\s+-s\s+_new_window(_ssh)?\s+#\{pane_pid\}\s+#\{b:pane_tty\}([^}\n&amp;#39;]*)&amp;#39;/run-shell &amp;#39;cut -c3- \1 | sh -s _new_window\2 #\{pane_pid\} #\{b:pane_tty\} -c \\\\\&amp;#34;#\{pane_current_path\}\\\\\&amp;#34;\3&amp;#39;/g if /\bdisplay-menu\b/
# ;
# s/\brun-shell\b\s+&amp;#39;cut\s+-c3-\s+(.+?)\s+\|\s+sh\s+-s\s+_new_window(_ssh)?\s+#\{pane_pid\}\s+#\{b:pane_tty\}([^}\n&amp;#39;]*)&amp;#39;/run-shell &amp;#39;cut -c3- \1 | sh -s _new_window\2 #\{pane_pid\} #\{b:pane_tty\} -c \&amp;#34;#\{pane_current_path\}\&amp;#34;\3&amp;#39;/g&amp;#34; \
# &amp;#34;$cfg&amp;#34;
# fi
#
# tmux_conf_new_pane_retain_current_path=${tmux_conf_new_pane_retain_current_path:-true}
# if ! _is_disabled &amp;#34;$tmux_conf_new_pane_retain_current_path&amp;#34;; then
# perl -p -i -e &amp;#34;
# s/\brun-shell\b\s+(\&amp;#34;|&amp;#39;)cut\s+-c3-\s+(.+?)\s+\|\s+sh\s+-s\s+_split_window\s+#\{pane_pid\}\s+#\{b:pane_tty\}([^\n\1]*?)(?:\s+-c\s+((?:\\\\{1,3}\&amp;#34;)?|\&amp;#34;?|&amp;#39;?)#\{pane_current_path\}\4)([^\n\1]*?)\1/run-shell \1cut -c3- \2 | sh -s _split_window #\{pane_pid\} #\{b:pane_tty\}\3\5\1/g
# ;
# s/\brun-shell\b\s+(\&amp;#34;|&amp;#39;)cut\s+-c3-\s+.+?\s+\|\s+sh\s+-s\s+_split_window\s+#\{pane_pid\}\s+#\{b:pane_tty\}(\s+.+?)?\1/split-window\2/g
# ;
# s/\bsplit-window\b([^;}\n]*?)(?:\s+-c\s+((?:\\\\\&amp;#34;)?|\&amp;#34;?|&amp;#39;?)#\{pane_current_path\}\2)/split-window\1/g&amp;#34; \
# &amp;#34;$cfg&amp;#34;
# fi
#
# perl -p -i -e &amp;#34;
# s,\bsplit-window\b((?:(?:[ \t]+-[bdfhIvP])|(?:[ \t]+-[celtF][ \t]+(?!\bssh\b)[^\s]+))*)?(?:\s+(\bssh\b))((?:(?:[ \t]+-[bdfhIvP])|(?:[ \t]+-[celtF][ \t]+(?!\bssh\b)[^\s]+))*)?,run-shell &amp;#39;cut -c3- \&amp;#34;$TMUX_CONF\&amp;#34; | sh -s _split_window_ssh #\{pane_pid\} #\{b:pane_tty\}\1&amp;#39;,g if /\bsplit-window\b((?:(?:[ \t]+-[bdfhIvP])|(?:[ \t]+-[celtF][ \t]+(?!ssh)[^\s]+))*)?(?:\s+(ssh))((?:(?:[ \t]+-[bdfhIvP])|(?:[ \t]+-[celtF][ \t]+(?!ssh)[^\s]+))*)?/&amp;#34;\
# &amp;#34;$cfg&amp;#34;
#
# tmux_conf_new_pane_reconnect_ssh=${tmux_conf_new_pane_reconnect_ssh:-false}
# if ! _is_disabled &amp;#34;$tmux_conf_new_pane_reconnect_ssh&amp;#34; &amp;amp;&amp;amp; _is_true &amp;#34;$tmux_conf_new_pane_reconnect_ssh&amp;#34;; then
# perl -p -i -e &amp;#34;s,\bsplit-window\b([^;}\n\&amp;#34;]*),run-shell &amp;#39;cut -c3- \&amp;#34;$TMUX_CONF\&amp;#34; | sh -s _split_window #\{pane_pid\} #\{b:pane_tty\}\1&amp;#39;,g&amp;#34; &amp;#34;$cfg&amp;#34;
# fi
#
# if ! _is_disabled &amp;#34;$tmux_conf_new_pane_retain_current_path&amp;#34; &amp;amp;&amp;amp; _is_true &amp;#34;$tmux_conf_new_pane_retain_current_path&amp;#34;; then
# perl -p -i -e &amp;#34;
# s/\bsplit-window\b(?!\s+(?:-|}))/{$&amp;amp;}/g if /\bdisplay-menu\b/
# ;
# s/\bsplit-window\b/split-window -c &amp;#39;#{pane_current_path}&amp;#39;\1/g
# ;
# s/\brun-shell\b\s+&amp;#39;cut\s+-c3-\s+(.+?)\s+\|\s+sh\s+-s\s+_split_window(_ssh)?\s+#\{pane_pid\}\s+#\{b:pane_tty\}([^}\n&amp;#39;]*)&amp;#39;/run-shell &amp;#39;cut -c3- \1 | sh -s _split_window\2 #\{pane_pid\} #\{b:pane_tty\} -c \\\\\&amp;#34;#\{pane_current_path\}\\\\\&amp;#34;\3&amp;#39;/g if /\bdisplay-menu\b/
# ;
# s/\brun-shell\b\s+&amp;#39;cut\s+-c3-\s+(.+?)\s+\|\s+sh\s+-s\s+_split_window(_ssh)?\s+#\{pane_pid\}\s+#\{b:pane_tty\}([^}\n&amp;#39;]*)&amp;#39;/run-shell &amp;#39;cut -c3- \1 | sh -s _split_window\2 #\{pane_pid\} #\{b:pane_tty\} -c \&amp;#34;#\{pane_current_path\}\&amp;#34;\3&amp;#39;/g&amp;#34; \
# &amp;#34;$cfg&amp;#34;
# fi
#
# tmux_conf_new_session_prompt=${tmux_conf_new_session_prompt:-false}
# if ! _is_disabled &amp;#34;$tmux_conf_new_session_prompt&amp;#34; &amp;amp;&amp;amp; _is_true &amp;#34;$tmux_conf_new_session_prompt&amp;#34;; then
# perl -p -i -e &amp;#34;
# s/(?&amp;lt;!command-prompt -p )\b(new-session)\b(?!\s+(?:-|}))/{$&amp;amp;}/g if /\bdisplay-menu\b/
# ;
# s/(?&amp;lt;!\bcommand-prompt -p )\bnew-session\b(?! -s)/command-prompt -p new-session \&amp;#34;new-session -s &amp;#39;%%&amp;#39;\&amp;#34;/g&amp;#34; \
# &amp;#34;$cfg&amp;#34;
# else
# perl -p -i -e &amp;#34;s/\bcommand-prompt\s+-p\s+new-session\s+\&amp;#34;new-session\s+-s\s+&amp;#39;%%&amp;#39;\&amp;#34;/new-session/g&amp;#34; &amp;#34;$cfg&amp;#34;
# fi
#
# tmux_conf_new_session_retain_current_path=${tmux_conf_new_session_retain_current_path:-false}
# if ! _is_disabled &amp;#34;$tmux_conf_new_session_retain_current_path&amp;#34; &amp;amp;&amp;amp; _is_true &amp;#34;$tmux_conf_new_session_retain_current_path&amp;#34;; then
# perl -p -i -e &amp;#34;
# s/(?&amp;lt;!\bcommand-prompt -p )\bnew-session\b/new-session -c &amp;#39;#{pane_current_path}&amp;#39;/g&amp;#34; \
# &amp;#34;$cfg&amp;#34;
# else
# perl -p -i -e &amp;#34;
# s/\bnew-session\b([^;}\n]*?)(?:\s+-c\s+((?:\\\\\&amp;#34;)?|\&amp;#34;?|&amp;#39;?)#\{pane_current_path\}\2)/new-session\1/g&amp;#34; \
# &amp;#34;$cfg&amp;#34;
# fi
#
# tmux_conf_copy_to_os_clipboard=${tmux_conf_copy_to_os_clipboard:-false}
# command -v xsel &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; command=&amp;#39;xsel -i -b&amp;#39;
# ! command -v xsel &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; command -v xclip &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; command=&amp;#39;xclip -i -selection clipboard &amp;gt; \/dev\/null 2&amp;gt;\&amp;amp;1&amp;#39;
# [ &amp;#34;$XDG_SESSION_TYPE&amp;#34; = &amp;#34;wayland&amp;#34; ] &amp;amp;&amp;amp; command -v wl-copy &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; command=&amp;#39;wl-copy&amp;#39;
# command -v pbcopy &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; command=&amp;#39;pbcopy&amp;#39;
# command -v clip.exe &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; command=&amp;#39;clip\.exe&amp;#39;
# [ -c /dev/clipboard ] &amp;amp;&amp;amp; command=&amp;#39;cat &amp;gt; \/dev\/clipboard&amp;#39;
#
# if [ -n &amp;#34;$command&amp;#34; ]; then
# if ! _is_disabled &amp;#34;$tmux_conf_copy_to_os_clipboard&amp;#34; &amp;amp;&amp;amp; _is_true &amp;#34;$tmux_conf_copy_to_os_clipboard&amp;#34;; then
# perl -p -i -e &amp;#34;s/(?!.*?$command)\bcopy-(?:selection|pipe)(-end-of-line|-and-cancel|-end-of-line-and-cancel|-no-clear)?\b/copy-pipe\1 &amp;#39;$command&amp;#39;/g&amp;#34; &amp;#34;$cfg&amp;#34;
# else
# if [ &amp;#34;$_tmux_version&amp;#34; -ge 320 ]; then
# perl -p -i -e &amp;#34;s/\bcopy-pipe(-end-of-line|-and-cancel|end-of-line-and-cancel|-no-clear)?\b\s+(\&amp;#34;|&amp;#39;)?$command\2?/copy-pipe\1/g&amp;#34; &amp;#34;$cfg&amp;#34;
# else
# perl -p -i -e &amp;#34;s/\bcopy-pipe(-end-of-line|-and-cancel|end-of-line-and-cancel|-no-clear)?\b\s+(\&amp;#34;|&amp;#39;)?$command\2?/copy-selection\1/g&amp;#34; &amp;#34;$cfg&amp;#34;
# fi
# fi
# fi
#
# # until tmux &amp;gt;= 3.0, output of tmux list-keys can&amp;#39;t be consumed back by tmux source-file without applying some escapings
# awk &amp;lt; &amp;#34;$cfg&amp;#34; \
# &amp;#39;{i = $2 == &amp;#34;-T&amp;#34; ? 4 : 5; gsub(/^[;]$/, &amp;#34;\\\\&amp;amp;&amp;#34;, $i); gsub(/^[$&amp;#34;#~]$/, &amp;#34;&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;&amp;amp;&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;&amp;#34;, $i); gsub(/^[&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;]$/, &amp;#34;\&amp;#34;&amp;amp;\&amp;#34;&amp;#34;, $i); print}&amp;#39; &amp;gt; &amp;#34;$cfg.in&amp;#34;
#
# # ignore bindings with errors
# if ! tmux source-file &amp;#34;$cfg.in&amp;#34;; then
# if tmux source-file -v /dev/null 2&amp;gt; /dev/null; then
# verbose_flag=&amp;#39;-v&amp;#39;
# fi
# while ! out=$(tmux source-file &amp;#34;${verbose_flag:+$verbose_flag}&amp;#34; &amp;#34;$cfg.in&amp;#34;); do
# line=$(printf &amp;#34;%s&amp;#34; &amp;#34;$out&amp;#34; | tail -1 | cut -d&amp;#39;:&amp;#39; -f2)
# perl -n -i -e &amp;#34;if ($. != $line) { print }&amp;#34; &amp;#34;$cfg.in&amp;#34;
# done
# fi
#
# tmux_conf_urlscan_options=${tmux_conf_urlscan_options:---compact --dedupe}
# if command -v urlscan &amp;gt; /dev/null 2&amp;gt;&amp;amp;1; then
# tmux bind U run &amp;#34;cut -c3- &amp;#39;#{TMUX_CONF}&amp;#39; | sh -s _urlscan &amp;#39;#{pane_id}&amp;#39; $tmux_conf_urlscan_options&amp;#34;
# elif command -v urlview &amp;gt; /dev/null 2&amp;gt;&amp;amp;1; then
# tmux bind U run &amp;#34;cut -c3- &amp;#39;#{TMUX_CONF}&amp;#39; | sh -s _urlview &amp;#39;#{pane_id}&amp;#39;&amp;#34;
# fi
# }
#
# _apply_theme() {
# tmux_conf_theme=${tmux_conf_theme:-enabled}
# if ! _is_disabled &amp;#34;$tmux_conf_theme&amp;#34;; then
#
# # -- default theme -------------------------------------------------------
#
# tmux_conf_theme_colour_1=${tmux_conf_theme_colour_1:-#080808} # dark gray
# tmux_conf_theme_colour_2=${tmux_conf_theme_colour_2:-#303030} # gray
# tmux_conf_theme_colour_3=${tmux_conf_theme_colour_3:-#8a8a8a} # light gray
# tmux_conf_theme_colour_4=${tmux_conf_theme_colour_4:-#00afff} # light blue
# tmux_conf_theme_colour_5=${tmux_conf_theme_colour_5:-#ffff00} # yellow
# tmux_conf_theme_colour_6=${tmux_conf_theme_colour_6:-#080808} # dark gray
# tmux_conf_theme_colour_7=${tmux_conf_theme_colour_7:-#e4e4e4} # white
# tmux_conf_theme_colour_8=${tmux_conf_theme_colour_8:-#080808} # dark gray
# tmux_conf_theme_colour_9=${tmux_conf_theme_colour_9:-#ffff00} # yellow
# tmux_conf_theme_colour_10=${tmux_conf_theme_colour_10:-#ff00af} # pink
# tmux_conf_theme_colour_11=${tmux_conf_theme_colour_11:-#5fff00} # green
# tmux_conf_theme_colour_12=${tmux_conf_theme_colour_12:-#8a8a8a} # light gray
# tmux_conf_theme_colour_13=${tmux_conf_theme_colour_13:-#e4e4e4} # white
# tmux_conf_theme_colour_14=${tmux_conf_theme_colour_14:-#080808} # dark gray
# tmux_conf_theme_colour_15=${tmux_conf_theme_colour_15:-#080808} # dark gray
# tmux_conf_theme_colour_16=${tmux_conf_theme_colour_16:-#d70000} # red
# tmux_conf_theme_colour_17=${tmux_conf_theme_colour_17:-#e4e4e4} # white
#
# # -- panes ---------------------------------------------------------------
#
# tmux_conf_theme_window_fg=${tmux_conf_theme_window_fg:-default}
# tmux_conf_theme_window_bg=${tmux_conf_theme_window_bg:-default}
# tmux_conf_theme_highlight_focused_pane=${tmux_conf_theme_highlight_focused_pane:-false}
# tmux_conf_theme_focused_pane_fg=${tmux_conf_theme_focused_pane_fg:-default}
# tmux_conf_theme_focused_pane_bg=${tmux_conf_theme_focused_pane_bg:-$tmux_conf_theme_colour_2}
#
# window_style=&amp;#34;fg=$tmux_conf_theme_window_fg,bg=$tmux_conf_theme_window_bg&amp;#34;
# if _is_true &amp;#34;$tmux_conf_theme_highlight_focused_pane&amp;#34;; then
# window_active_style=&amp;#34;fg=$tmux_conf_theme_focused_pane_fg,bg=$tmux_conf_theme_focused_pane_bg&amp;#34;
# else
# window_active_style=&amp;#34;default&amp;#34;
# fi
#
# tmux_conf_theme_pane_border_style=${tmux_conf_theme_pane_border_style:-thin}
# tmux_conf_theme_pane_border=${tmux_conf_theme_pane_border:-$tmux_conf_theme_colour_2}
# tmux_conf_theme_pane_active_border=${tmux_conf_theme_pane_active_border:-$tmux_conf_theme_colour_4}
# tmux_conf_theme_pane_border_fg=${tmux_conf_theme_pane_border_fg:-$tmux_conf_theme_pane_border}
# tmux_conf_theme_pane_active_border_fg=${tmux_conf_theme_pane_active_border_fg:-$tmux_conf_theme_pane_active_border}
# case &amp;#34;$tmux_conf_theme_pane_border_style&amp;#34; in
# fat)
# tmux_conf_theme_pane_border_bg=${tmux_conf_theme_pane_border_bg:-$tmux_conf_theme_pane_border_fg}
# tmux_conf_theme_pane_active_border_bg=${tmux_conf_theme_pane_active_border_bg:-$tmux_conf_theme_pane_active_border_fg}
# ;;
# thin|*)
# tmux_conf_theme_pane_border_bg=${tmux_conf_theme_pane_border_bg:-default}
# tmux_conf_theme_pane_active_border_bg=${tmux_conf_theme_pane_active_border_bg:-default}
# ;;
# esac
#
# tmux_conf_theme_pane_indicator=${tmux_conf_theme_pane_indicator:-$tmux_conf_theme_colour_4}
# tmux_conf_theme_pane_active_indicator=${tmux_conf_theme_pane_active_indicator:-$tmux_conf_theme_colour_4}
#
# # -- status line ---------------------------------------------------------
#
# tmux_conf_theme_left_separator_main=$(_decode_unicode_escapes &amp;#34;${tmux_conf_theme_left_separator_main-}&amp;#34;)
# tmux_conf_theme_left_separator_sub=$(_decode_unicode_escapes &amp;#34;${tmux_conf_theme_left_separator_sub-|}&amp;#34;)
# tmux_conf_theme_right_separator_main=$(_decode_unicode_escapes &amp;#34;${tmux_conf_theme_right_separator_main-}&amp;#34;)
# tmux_conf_theme_right_separator_sub=$(_decode_unicode_escapes &amp;#34;${tmux_conf_theme_right_separator_sub-|}&amp;#34;)
#
# tmux_conf_theme_message_fg=${tmux_conf_theme_message_fg:-$tmux_conf_theme_colour_1}
# tmux_conf_theme_message_bg=${tmux_conf_theme_message_bg:-$tmux_conf_theme_colour_5}
# tmux_conf_theme_message_attr=${tmux_conf_theme_message_attr:-bold}
#
# tmux_conf_theme_message_command_fg=${tmux_conf_theme_message_command_fg:-$tmux_conf_theme_colour_5}
# tmux_conf_theme_message_command_bg=${tmux_conf_theme_message_command_bg:-$tmux_conf_theme_colour_1}
# tmux_conf_theme_message_command_attr=${tmux_conf_theme_message_command_attr:-bold}
#
# tmux_conf_theme_mode_fg=${tmux_conf_theme_mode_fg:-$tmux_conf_theme_colour_1}
# tmux_conf_theme_mode_bg=${tmux_conf_theme_mode_bg:-$tmux_conf_theme_colour_5}
# tmux_conf_theme_mode_attr=${tmux_conf_theme_mode_attr:-bold}
#
# tmux_conf_theme_status_fg=${tmux_conf_theme_status_fg:-$tmux_conf_theme_colour_3}
# tmux_conf_theme_status_bg=${tmux_conf_theme_status_bg:-$tmux_conf_theme_colour_1}
# tmux_conf_theme_status_attr=${tmux_conf_theme_status_attr:-none}
#
# tmux_conf_theme_terminal_title=${tmux_conf_theme_terminal_title:-#h ❐ #S ● #I #W}
#
# tmux_conf_theme_window_status_fg=${tmux_conf_theme_window_status_fg:-$tmux_conf_theme_colour_3}
# tmux_conf_theme_window_status_bg=${tmux_conf_theme_window_status_bg:-$tmux_conf_theme_colour_1}
# tmux_conf_theme_window_status_attr=${tmux_conf_theme_window_status_attr:-none}
# tmux_conf_theme_window_status_format=${tmux_conf_theme_window_status_format:-&amp;#39;#I #W#{?#{||:#{window_bell_flag},#{window_zoomed_flag}}, ,}#{?window_bell_flag,!,}#{?window_zoomed_flag,Z,}&amp;#39;}
#
# tmux_conf_theme_window_status_current_fg=${tmux_conf_theme_window_status_current_fg:-$tmux_conf_theme_colour_1}
# tmux_conf_theme_window_status_current_bg=${tmux_conf_theme_window_status_current_bg:-$tmux_conf_theme_colour_4}
# tmux_conf_theme_window_status_current_attr=${tmux_conf_theme_window_status_current_attr:-bold}
# tmux_conf_theme_window_status_current_format=${tmux_conf_theme_window_status_current_format:-&amp;#39;#I #W#{?#{||:#{window_bell_flag},#{window_zoomed_flag}}, ,}#{?window_bell_flag,!,}#{?window_zoomed_flag,Z,}&amp;#39;}
#
# tmux_conf_theme_window_status_activity_fg=${tmux_conf_theme_window_status_activity_fg:-default}
# tmux_conf_theme_window_status_activity_bg=${tmux_conf_theme_window_status_activity_bg:-default}
# tmux_conf_theme_window_status_activity_attr=${tmux_conf_theme_window_status_activity_attr:-underscore}
#
# tmux_conf_theme_window_status_bell_fg=${tmux_conf_theme_window_status_bell_fg:-$tmux_conf_theme_colour_5}
# tmux_conf_theme_window_status_bell_bg=${tmux_conf_theme_window_status_bell_bg:-default}
# tmux_conf_theme_window_status_bell_attr=${tmux_conf_theme_window_status_bell_attr:-blink,bold}
#
# tmux_conf_theme_window_status_last_fg=${tmux_conf_theme_window_status_last_fg:-$tmux_conf_theme_colour_4}
# tmux_conf_theme_window_status_last_bg=${tmux_conf_theme_window_status_last_bg:-default}
# tmux_conf_theme_window_status_last_attr=${tmux_conf_theme_window_status_last_attr:-none}
#
# if [ &amp;#34;$tmux_conf_theme_window_status_bg&amp;#34; = &amp;#34;$tmux_conf_theme_status_bg&amp;#34; ] || [ &amp;#34;$tmux_conf_theme_window_status_bg&amp;#34; = &amp;#34;default&amp;#34; ]; then
# spacer=&amp;#39;&amp;#39;
# spacer_current=&amp;#39; &amp;#39;
# else
# spacer=&amp;#39; &amp;#39;
# spacer_current=&amp;#39; &amp;#39;
# fi
# if [ &amp;#34;$tmux_conf_theme_window_status_last_bg&amp;#34; = &amp;#34;$tmux_conf_theme_status_bg&amp;#34; ] || [ &amp;#34;$tmux_conf_theme_window_status_last_bg&amp;#34; = &amp;#34;default&amp;#34; ] ; then
# spacer_last=&amp;#39;&amp;#39;
# else
# spacer_last=&amp;#39; &amp;#39;
# fi
# if [ &amp;#34;$tmux_conf_theme_window_status_activity_bg&amp;#34; = &amp;#34;$tmux_conf_theme_status_bg&amp;#34; ] || [ &amp;#34;$tmux_conf_theme_window_status_activity_bg&amp;#34; = &amp;#34;default&amp;#34; ] ; then
# spacer_activity=&amp;#39;&amp;#39;
# spacer_last_activity=&amp;#34;$spacer_last&amp;#34;
# else
# spacer_activity=&amp;#39; &amp;#39;
# spacer_last_activity=&amp;#39; &amp;#39;
# fi
# if [ &amp;#34;$tmux_conf_theme_window_status_bell_bg&amp;#34; = &amp;#34;$tmux_conf_theme_status_bg&amp;#34; ] || [ &amp;#34;$tmux_conf_theme_window_status_bell_bg&amp;#34; = &amp;#34;default&amp;#34; ] ; then
# spacer_bell=&amp;#39;&amp;#39;
# spacer_last_bell=&amp;#34;$spacer_last&amp;#34;
# spacer_activity_bell=&amp;#34;$spacer_activity&amp;#34;
# spacer_last_activity_bell=&amp;#34;$spacer_last_activity&amp;#34;
# else
# spacer_bell=&amp;#39; &amp;#39;
# spacer_last_bell=&amp;#39; &amp;#39;
# spacer_activity_bell=&amp;#39; &amp;#39;
# spacer_last_activity_bell=&amp;#39; &amp;#39;
# fi
# spacer=&amp;#34;#{?window_last_flag,#{?window_activity_flag,#{?window_bell_flag,$spacer_last_activity_bell,$spacer_last_activity},#{?window_bell_flag,$spacer_last_bell,$spacer_last}},#{?window_activity_flag,#{?window_bell_flag,$spacer_activity_bell,$spacer_activity},#{?window_bell_flag,$spacer_bell,$spacer}}}&amp;#34;
# if [ &amp;#34;$(tmux show -g -v status-justify)&amp;#34; = &amp;#34;right&amp;#34; ]; then
# if [ -z &amp;#34;$tmux_conf_theme_right_separator_main&amp;#34; ]; then
# window_status_separator=&amp;#39; &amp;#39;
# else
# window_status_separator=&amp;#39;&amp;#39;
# fi
# window_status_format=&amp;#34;#[fg=$tmux_conf_theme_window_status_bg,bg=$tmux_conf_theme_status_bg,none]#{?window_last_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_last_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_activity_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_activity_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_bell_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_bell_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}$tmux_conf_theme_right_separator_main#[fg=$tmux_conf_theme_window_status_fg,bg=$tmux_conf_theme_window_status_bg,$tmux_conf_theme_window_status_attr]#{?window_last_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_last_fg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_last_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_last_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_activity_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_activity_fg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_activity_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_activity_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_bell_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_bell_fg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_bell_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_bell_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}$spacer$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_last_attr&amp;#34; | perl -n -e &amp;#39;print &amp;#34;#{?window_last_flag,#[none],}&amp;#34; if !/default/ ; s/([a-z]+),?/#{?window_last_flag,#[\1],}/g; print if !/default/&amp;#39;)$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_activity_attr&amp;#34; | perl -n -e &amp;#39;print &amp;#34;#{?window_activity_flag?,#[none],}&amp;#34; if !/default/ ; s/([a-z]+),?/#{?window_activity_flag,#[\1],}/g; print if !/default/&amp;#39;)$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_bell_attr&amp;#34; | perl -n -e &amp;#39;print &amp;#34;#{?window_bell_flag,#[none],}&amp;#34; if !/default/ ; s/([a-z]+),?/#{?window_bell_flag,#[\1],}/g; print if !/default/&amp;#39;)$tmux_conf_theme_window_status_format#[none]$spacer#[fg=$tmux_conf_theme_status_bg,bg=$tmux_conf_theme_window_status_bg]#{?window_last_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_last_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_activity_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_activity_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_bell_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_bell_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}#[none]$tmux_conf_theme_right_separator_main&amp;#34;
# window_status_current_format=&amp;#34;#[fg=$tmux_conf_theme_window_status_current_bg,bg=$tmux_conf_theme_status_bg,none]$tmux_conf_theme_right_separator_main#[fg=$tmux_conf_theme_window_status_current_fg,bg=$tmux_conf_theme_window_status_current_bg,$tmux_conf_theme_window_status_current_attr]$spacer_current$tmux_conf_theme_window_status_current_format$spacer_current#[fg=$tmux_conf_theme_status_bg,bg=$tmux_conf_theme_window_status_current_bg,none]$tmux_conf_theme_right_separator_main&amp;#34;
# else
# if [ -z &amp;#34;$tmux_conf_theme_left_separator_main&amp;#34; ]; then
# window_status_separator=&amp;#39; &amp;#39;
# else
# window_status_separator=&amp;#39;&amp;#39;
# fi
# window_status_format=&amp;#34;#[fg=$tmux_conf_theme_status_bg,bg=$tmux_conf_theme_window_status_bg,none]#{?window_last_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_last_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_activity_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_activity_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_bell_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_bell_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}$tmux_conf_theme_left_separator_main#[fg=$tmux_conf_theme_window_status_fg,bg=$tmux_conf_theme_window_status_bg,$tmux_conf_theme_window_status_attr]#{?window_last_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_last_fg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_last_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_last_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_activity_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_activity_fg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_activity_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_activity_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_bell_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_bell_fg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_bell_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_bell_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[bg=$&amp;amp;]/; print if !/default/&amp;#34;),}$spacer$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_last_attr&amp;#34; | perl -n -e &amp;#39;print &amp;#34;#{?window_last_flag,#[none],}&amp;#34; if !/default/ ; s/([a-z]+),?/#{?window_last_flag,#[\1],}/g; print if !/default/&amp;#39;)$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_activity_attr&amp;#34; | perl -n -e &amp;#39;print &amp;#34;#{?window_activity_flag,#[none],}&amp;#34; if !/default/ ; s/([a-z]+),?/#{?window_activity_flag,#[\1],}/g; print if !/default/&amp;#39;)$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_bell_attr&amp;#34; | perl -n -e &amp;#39;print &amp;#34;#{?window_bell_flag,#[none],}&amp;#34; if /!default/ ; s/([a-z]+),?/#{?window_bell_flag,#[\1],}/g; print if !/default/&amp;#39;)$tmux_conf_theme_window_status_format#[none]$spacer#[fg=$tmux_conf_theme_window_status_bg,bg=$tmux_conf_theme_status_bg]#{?window_last_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_last_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_activity_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_activity_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}#{?window_bell_flag,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_window_status_bell_bg&amp;#34; | perl -n -e &amp;#34;s/.+/#[fg=$&amp;amp;]/; print if !/default/&amp;#34;),}$tmux_conf_theme_left_separator_main&amp;#34;
# window_status_current_format=&amp;#34;#[fg=$tmux_conf_theme_status_bg,bg=$tmux_conf_theme_window_status_current_bg,none]$tmux_conf_theme_left_separator_main#[fg=$tmux_conf_theme_window_status_current_fg,bg=$tmux_conf_theme_window_status_current_bg,$tmux_conf_theme_window_status_current_attr]$spacer_current$tmux_conf_theme_window_status_current_format$spacer_current#[fg=$tmux_conf_theme_window_status_current_bg,bg=$tmux_conf_theme_status_bg]$tmux_conf_theme_left_separator_main&amp;#34;
# fi
#
# # -- indicators
#
# tmux_conf_theme_pairing=${tmux_conf_theme_pairing:-⚇} # U+2687
# tmux_conf_theme_pairing_fg=${tmux_conf_theme_pairing_fg:-none}
# tmux_conf_theme_pairing_bg=${tmux_conf_theme_pairing_bg:-none}
# tmux_conf_theme_pairing_attr=${tmux_conf_theme_pairing_attr:-none}
#
# tmux_conf_theme_prefix=${tmux_conf_theme_prefix:-⌨} # U+2328
# tmux_conf_theme_prefix_fg=${tmux_conf_theme_prefix_fg:-none}
# tmux_conf_theme_prefix_bg=${tmux_conf_theme_prefix_bg:-none}
# tmux_conf_theme_prefix_attr=${tmux_conf_theme_prefix_attr:-none}
#
# tmux_conf_theme_mouse=${tmux_conf_theme_mouse:-↗} # U+2197
# tmux_conf_theme_mouse_fg=${tmux_conf_theme_mouse_fg:-none}
# tmux_conf_theme_mouse_bg=${tmux_conf_theme_mouse_bg:-none}
# tmux_conf_theme_mouse_attr=${tmux_conf_theme_mouse_attr:-none}
#
# tmux_conf_theme_root=${tmux_conf_theme_root:-!}
# tmux_conf_theme_root_fg=${tmux_conf_theme_root_fg:-none}
# tmux_conf_theme_root_bg=${tmux_conf_theme_root_bg:-none}
# tmux_conf_theme_root_attr=${tmux_conf_theme_root_attr:-bold,blink}
#
# tmux_conf_theme_synchronized=${tmux_conf_theme_synchronized:-⚏} # U+268F
# tmux_conf_theme_synchronized_fg=${tmux_conf_theme_synchronized_fg:-none}
# tmux_conf_theme_synchronized_bg=${tmux_conf_theme_synchronized_bg:-none}
# tmux_conf_theme_synchronized_attr=${tmux_conf_theme_synchronized_attr:-none}
#
# # -- status-left style
#
# tmux_conf_theme_status_left=${tmux_conf_theme_status_left-&amp;#39; ❐ #S | ↑#{?uptime_y, #{uptime_y}y,}#{?uptime_d, #{uptime_d}d,}#{?uptime_h, #{uptime_h}h,}#{?uptime_m, #{uptime_m}m,} &amp;#39;}
# tmux_conf_theme_status_left_fg=${tmux_conf_theme_status_left_fg:-$tmux_conf_theme_colour_6,$tmux_conf_theme_colour_7,$tmux_conf_theme_colour_8}
# tmux_conf_theme_status_left_bg=${tmux_conf_theme_status_left_bg:-$tmux_conf_theme_colour_9,$tmux_conf_theme_colour_10,$tmux_conf_theme_colour_11}
# tmux_conf_theme_status_left_attr=${tmux_conf_theme_status_left_attr:-bold,none,none}
#
# if [ -n &amp;#34;$tmux_conf_theme_status_left&amp;#34; ]; then
# status_left=$(echo &amp;#34;$tmux_conf_theme_status_left&amp;#34; | sed \
# -e &amp;#34;s/#{pairing}/#[fg=$tmux_conf_theme_pairing_fg]#[bg=$tmux_conf_theme_pairing_bg]#[$tmux_conf_theme_pairing_attr]#{pairing}#[inherit]/g&amp;#34; \
# -e &amp;#34;s/#{prefix}/#[fg=$tmux_conf_theme_prefix_fg]#[bg=$tmux_conf_theme_prefix_bg]#[$tmux_conf_theme_prefix_attr]#{prefix}#[inherit]/g&amp;#34; \
# -e &amp;#34;s/#{mouse}/#[fg=$tmux_conf_theme_mouse_fg]#[bg=$tmux_conf_theme_mouse_bg]#[$tmux_conf_theme_mouse_attr]#{mouse}#[inherit]/g&amp;#34; \
# -e &amp;#34;s/#{synchronized}/#[fg=$tmux_conf_theme_synchronized_fg]#[bg=$tmux_conf_theme_synchronized_bg]#[$tmux_conf_theme_synchronized_attr]#{synchronized}#[inherit]/g&amp;#34; \
# -e &amp;#34;s/#{root}/#[fg=$tmux_conf_theme_root_fg]#[bg=$tmux_conf_theme_root_bg]#[$tmux_conf_theme_root_attr]#{root}#[inherit]/g&amp;#34;)
#
# status_left=$(printf &amp;#39;%s&amp;#39; &amp;#34;$status_left&amp;#34; | awk \
# -v status_bg=&amp;#34;$tmux_conf_theme_status_bg&amp;#34; \
# -v fg_=&amp;#34;$tmux_conf_theme_status_left_fg&amp;#34; \
# -v bg_=&amp;#34;$tmux_conf_theme_status_left_bg&amp;#34; \
# -v attr_=&amp;#34;$tmux_conf_theme_status_left_attr&amp;#34; \
# -v mainsep=&amp;#34;$tmux_conf_theme_left_separator_main&amp;#34; \
# -v subsep=&amp;#34;$tmux_conf_theme_left_separator_sub&amp;#34; &amp;#39;
# function subsplit(s, l, i, a, r)
# {
# l = split(s, a, &amp;#34;,&amp;#34;)
# for (i = 1; i &amp;lt;= l; ++i)
# {
# o = split(a[i], _, &amp;#34;(&amp;#34;) - 1
# c = split(a[i], _, &amp;#34;)&amp;#34;) - 1
# open += o - c
# o_ = split(a[i], _, &amp;#34;{&amp;#34;) - 1
# c_ = split(a[i], _, &amp;#34;}&amp;#34;) - 1
# open_ += o_ - c_
# o__ = split(a[i], _, &amp;#34;[&amp;#34;) - 1
# c__ = split(a[i], _, &amp;#34;]&amp;#34;) - 1
# open__ += o__ - c__
#
# if (i == l)
# r = sprintf(&amp;#34;%s%s&amp;#34;, r, a[i])
# else if (open || open_ || open__)
# r = sprintf(&amp;#34;%s%s,&amp;#34;, r, a[i])
# else
# r = sprintf(&amp;#34;%s%s#[fg=%s,bg=%s,%s]%s&amp;#34;, r, a[i], fg[j], bg[j], attr[j], subsep)
# }
#
# gsub(/#\[inherit\]/, sprintf(&amp;#34;#[default]#[fg=%s,bg=%s,%s]&amp;#34;, fg[j], bg[j], attr[j]), r)
# return r
# }
# BEGIN {
# FS = &amp;#34;|&amp;#34;
# l1 = split(fg_, fg, &amp;#34;,&amp;#34;)
# l2 = split(bg_, bg, &amp;#34;,&amp;#34;)
# l3 = split(attr_, attr, &amp;#34;,&amp;#34;)
# l = l1 &amp;lt; l2 ? (l1 &amp;lt; l3 ? l1 : l3) : (l2 &amp;lt; l3 ? l2 : l3)
# }
# {
# for (i = j = 1; i &amp;lt;= NF; ++i)
# {
# if (open || open_ || open__)
# printf &amp;#34;|%s&amp;#34;, subsplit($i)
# else
# {
# if (i &amp;gt; 1)
# printf &amp;#34;#[fg=%s,bg=%s,none]%s#[fg=%s,bg=%s,%s]%s&amp;#34;, bg[j_], bg[j], mainsep, fg[j], bg[j], attr[j], subsplit($i)
# else
# printf &amp;#34;#[fg=%s,bg=%s,%s]%s&amp;#34;, fg[j], bg[j], attr[j], subsplit($i)
# }
#
# if (!open &amp;amp;&amp;amp; !open_ &amp;amp;&amp;amp; !open__)
# {
# j_ = j
# j = j % l + 1
# }
# }
# printf &amp;#34;#[fg=%s,bg=%s,none]%s&amp;#34;, bg[j_], status_bg, mainsep
# }&amp;#39;)
# fi
# status_left=&amp;#34;$status_left &amp;#34;
#
# # -- status-right style
#
# tmux_conf_theme_status_right=${tmux_conf_theme_status_right-&amp;#39; #{prefix}#{mouse}#{pairing}#{synchronized}#{?battery_status, #{battery_status},}#{?battery_bar, #{battery_bar},}#{?battery_percentage, #{battery_percentage},} , %R , %d %b | #{username}#{root} | #{hostname} &amp;#39;}
# tmux_conf_theme_status_right_fg=${tmux_conf_theme_status_right_fg:-$tmux_conf_theme_colour_12,$tmux_conf_theme_colour_13,$tmux_conf_theme_colour_14}
# tmux_conf_theme_status_right_bg=${tmux_conf_theme_status_right_bg:-$tmux_conf_theme_colour_15,$tmux_conf_theme_colour_16,$tmux_conf_theme_colour_17}
# tmux_conf_theme_status_right_attr=${tmux_conf_theme_status_right_attr:-none,none,bold}
#
# if [ -n &amp;#34;$tmux_conf_theme_status_right&amp;#34; ]; then
# status_right=$(echo &amp;#34;$tmux_conf_theme_status_right&amp;#34; | sed \
# -e &amp;#34;s/#{pairing}/#[fg=$tmux_conf_theme_pairing_fg]#[bg=$tmux_conf_theme_pairing_bg]#[$tmux_conf_theme_pairing_attr]#{pairing}#[inherit]/g&amp;#34; \
# -e &amp;#34;s/#{prefix}/#[fg=$tmux_conf_theme_prefix_fg]#[bg=$tmux_conf_theme_prefix_bg]#[$tmux_conf_theme_prefix_attr]#{prefix}#[inherit]/g&amp;#34; \
# -e &amp;#34;s/#{mouse}/#[fg=$tmux_conf_theme_mouse_fg]#[bg=$tmux_conf_theme_mouse_bg]#[$tmux_conf_theme_mouse_attr]#{mouse}#[inherit]/g&amp;#34; \
# -e &amp;#34;s/#{synchronized}/#[fg=$tmux_conf_theme_synchronized_fg]#[bg=$tmux_conf_theme_synchronized_bg]#[$tmux_conf_theme_synchronized_attr]#{synchronized}#[inherit]/g&amp;#34; \
# -e &amp;#34;s/#{root}/#[fg=$tmux_conf_theme_root_fg]#[bg=$tmux_conf_theme_root_bg]#[$tmux_conf_theme_root_attr]#{root}#[inherit]/g&amp;#34;)
#
# status_right=$(printf &amp;#39;%s&amp;#39; &amp;#34;$status_right&amp;#34; | awk \
# -v status_bg=&amp;#34;$tmux_conf_theme_status_bg&amp;#34; \
# -v fg_=&amp;#34;$tmux_conf_theme_status_right_fg&amp;#34; \
# -v bg_=&amp;#34;$tmux_conf_theme_status_right_bg&amp;#34; \
# -v attr_=&amp;#34;$tmux_conf_theme_status_right_attr&amp;#34; \
# -v mainsep=&amp;#34;$tmux_conf_theme_right_separator_main&amp;#34; \
# -v subsep=&amp;#34;$tmux_conf_theme_right_separator_sub&amp;#34; &amp;#39;
# function subsplit(s, l, i, a, r)
# {
# l = split(s, a, &amp;#34;,&amp;#34;)
# for (i = 1; i &amp;lt;= l; ++i)
# {
# o = split(a[i], _, &amp;#34;(&amp;#34;) - 1
# c = split(a[i], _, &amp;#34;)&amp;#34;) - 1
# open += o - c
# o_ = split(a[i], _, &amp;#34;{&amp;#34;) - 1
# c_ = split(a[i], _, &amp;#34;}&amp;#34;) - 1
# open_ += o_ - c_
# o__ = split(a[i], _, &amp;#34;[&amp;#34;) - 1
# c__ = split(a[i], _, &amp;#34;]&amp;#34;) - 1
# open__ += o__ - c__
#
# if (i == l)
# r = sprintf(&amp;#34;%s%s&amp;#34;, r, a[i])
# else if (open || open_ || open__)
# r = sprintf(&amp;#34;%s%s,&amp;#34;, r, a[i])
# else
# r = sprintf(&amp;#34;%s%s#[fg=%s,bg=%s,%s]%s&amp;#34;, r, a[i], fg[j], bg[j], attr[j], subsep)
# }
#
# gsub(/#\[inherit\]/, sprintf(&amp;#34;#[default]#[fg=%s,bg=%s,%s]&amp;#34;, fg[j], bg[j], attr[j]), r)
# return r
# }
# BEGIN {
# FS = &amp;#34;|&amp;#34;
# l1 = split(fg_, fg, &amp;#34;,&amp;#34;)
# l2 = split(bg_, bg, &amp;#34;,&amp;#34;)
# l3 = split(attr_, attr, &amp;#34;,&amp;#34;)
# l = l1 &amp;lt; l2 ? (l1 &amp;lt; l3 ? l1 : l3) : (l2 &amp;lt; l3 ? l2 : l3)
# }
# {
# for (i = j = 1; i &amp;lt;= NF; ++i)
# {
# if (open_ || open || open__)
# printf &amp;#34;|%s&amp;#34;, subsplit($i)
# else
# printf &amp;#34;#[fg=%s,bg=%s,none]%s#[fg=%s,bg=%s,%s]%s&amp;#34;, bg[j], (i == 1) ? status_bg : bg[j_], mainsep, fg[j], bg[j], attr[j], subsplit($i)
#
# if (!open &amp;amp;&amp;amp; !open_ &amp;amp;&amp;amp; !open__)
# {
# j_ = j
# j = j % l + 1
# }
# }
# }&amp;#39;)
# fi
# status_right=${status_right-}
#
# # -- clock ---------------------------------------------------------------
#
# tmux_conf_theme_clock_colour=${tmux_conf_theme_clock_colour:-$tmux_conf_theme_colour_4}
# tmux_conf_theme_clock_style=${tmux_conf_theme_clock_style:-24}
#
# tmux setw -g window-style &amp;#34;$window_style&amp;#34; \; setw -g window-active-style &amp;#34;$window_active_style&amp;#34; \;\
# setw -g pane-border-style &amp;#34;fg=$tmux_conf_theme_pane_border_fg,bg=$tmux_conf_theme_pane_border_bg&amp;#34; \; set -g pane-active-border-style &amp;#34;fg=$tmux_conf_theme_pane_active_border_fg,bg=$tmux_conf_theme_pane_active_border_bg&amp;#34; \;\
# set -g display-panes-colour &amp;#34;$tmux_conf_theme_pane_indicator&amp;#34; \; set -g display-panes-active-colour &amp;#34;$tmux_conf_theme_pane_active_indicator&amp;#34; \;\
# set -g message-style &amp;#34;fg=$tmux_conf_theme_message_fg,bg=$tmux_conf_theme_message_bg,$tmux_conf_theme_message_attr&amp;#34; \;\
# set -g message-command-style &amp;#34;fg=$tmux_conf_theme_message_command_fg,bg=$tmux_conf_theme_message_command_bg,$tmux_conf_theme_message_command_attr&amp;#34; \;\
# setw -g mode-style &amp;#34;fg=$tmux_conf_theme_mode_fg,bg=$tmux_conf_theme_mode_bg,$tmux_conf_theme_mode_attr&amp;#34; \;\
# set -g status-style &amp;#34;fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr&amp;#34; \;\
# set -g status-left-style &amp;#34;fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr&amp;#34; \;\
# set -g status-right-style &amp;#34;fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr&amp;#34; \;\
# setw -g window-status-style &amp;#34;fg=$tmux_conf_theme_window_status_fg,bg=$tmux_conf_theme_window_status_bg,$tmux_conf_theme_window_status_attr&amp;#34; \;\
# setw -g window-status-current-style &amp;#34;fg=$tmux_conf_theme_window_status_current_fg,bg=$tmux_conf_theme_window_status_current_bg,$tmux_conf_theme_window_status_current_attr&amp;#34; \;\
# setw -g window-status-activity-style &amp;#34;fg=$tmux_conf_theme_window_status_activity_fg,bg=$tmux_conf_theme_window_status_activity_bg,$tmux_conf_theme_window_status_activity_attr&amp;#34; \;\
# setw -g window-status-bell-style &amp;#34;fg=$tmux_conf_theme_window_status_bell_fg,bg=$tmux_conf_theme_window_status_bell_bg,$tmux_conf_theme_window_status_bell_attr&amp;#34; \;\
# setw -g window-status-last-style &amp;#34;fg=$tmux_conf_theme_window_status_last_fg,bg=$tmux_conf_theme_window_status_last_bg,$tmux_conf_theme_window_status_last_attr&amp;#34; \;\
# setw -g window-status-separator &amp;#34;$window_status_separator&amp;#34; \;\
# setw -g clock-mode-colour &amp;#34;$tmux_conf_theme_clock_colour&amp;#34; \;\
# setw -g clock-mode-style &amp;#34;$tmux_conf_theme_clock_style&amp;#34;
# fi
#
# # -- variables -------------------------------------------------------------
#
# set_titles_string=$(printf &amp;#39;%s&amp;#39; &amp;#34;${tmux_conf_theme_terminal_title:-$(tmux show -gv set-titles-string)}&amp;#34; | sed \
# -e &amp;#34;s%#{circled_window_index}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _circled &amp;#39;#I&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{circled_session_name}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _circled &amp;#39;#S&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{username}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false false &amp;#39;#h&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_full}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false true &amp;#39;#H&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{username_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true false &amp;#39;#h&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_full_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true true &amp;#39;#H&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34;)
#
# window_status_format=$(printf &amp;#39;%s&amp;#39; &amp;#34;${window_status_format:-$(tmux show -gv window-status-format)}&amp;#34; | sed \
# -e &amp;#34;s%#{circled_window_index}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _circled &amp;#39;#I&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{circled_session_name}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _circled &amp;#39;#S&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{username}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false false &amp;#39;#h&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_full}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false true &amp;#39;#H&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{username_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true false &amp;#39;#h&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_full_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true true &amp;#39;#H&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34;)
#
# window_status_current_format=$(printf &amp;#39;%s&amp;#39; &amp;#34;${window_status_current_format:-$(tmux show -gv window-status-current-format)}&amp;#34; | sed \
# -e &amp;#34;s%#{circled_window_index}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _circled &amp;#39;#I&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{circled_session_name}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _circled &amp;#39;#S&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{username}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false false &amp;#39;#h&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_full}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false true &amp;#39;#H&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{username_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true false &amp;#39;#h&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_full_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true true &amp;#39;#H&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34;)
#
# status_left=$(printf &amp;#39;%s&amp;#39; &amp;#34;${status_left-$(tmux show -gv status-left)}&amp;#34; | sed \
# -e &amp;#34;s/#{pairing}/#{?session_many_attached,$tmux_conf_theme_pairing ,}/g&amp;#34; \
# -e &amp;#34;s/#{prefix}/#{?client_prefix,$tmux_conf_theme_prefix ,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_prefix&amp;#34; | sed -e &amp;#39;s/./ /g&amp;#39;) }/g&amp;#34; \
# -e &amp;#34;s/#{mouse}/#{?mouse,$tmux_conf_theme_mouse ,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_mouse&amp;#34; | sed -e &amp;#39;s/./ /g&amp;#39;) }/g&amp;#34; \
# -e &amp;#34;s%#{synchronized}%#{?pane_synchronized,$tmux_conf_theme_synchronized ,}%g&amp;#34; \
# -e &amp;#34;s%#{circled_session_name}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _circled &amp;#39;#S&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{root}%#{?#{==:#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; &amp;#39;#D&amp;#39;),root},$tmux_conf_theme_root,}%g&amp;#34;)
#
# status_right=$(printf &amp;#39;%s&amp;#39; &amp;#34;${status_right-$(tmux show -gv status-right)}&amp;#34; | sed \
# -e &amp;#34;s/#{pairing}/#{?session_many_attached,$tmux_conf_theme_pairing ,}/g&amp;#34; \
# -e &amp;#34;s/#{prefix}/#{?client_prefix,$tmux_conf_theme_prefix ,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_prefix&amp;#34; | sed -e &amp;#39;s/./ /g&amp;#39;) }/g&amp;#34; \
# -e &amp;#34;s/#{mouse}/#{?mouse,$tmux_conf_theme_mouse ,$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_theme_mouse&amp;#34; | sed -e &amp;#39;s/./ /g&amp;#39;) }/g&amp;#34; \
# -e &amp;#34;s%#{synchronized}%#{?pane_synchronized,$tmux_conf_theme_synchronized ,}%g&amp;#34; \
# -e &amp;#34;s%#{circled_session_name}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _circled &amp;#39;#S&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{root}%#{?#{==:#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; &amp;#39;#D&amp;#39;),root},$tmux_conf_theme_root,}%g&amp;#34;)
#
# tmux_conf_battery_bar_symbol_full=$(_decode_unicode_escapes &amp;#34;${tmux_conf_battery_bar_symbol_full:-◼}&amp;#34;)
# tmux_conf_battery_bar_symbol_empty=$(_decode_unicode_escapes &amp;#34;${tmux_conf_battery_bar_symbol_empty:-◻}&amp;#34;)
# tmux_conf_battery_bar_length=${tmux_conf_battery_bar_length:-auto}
# tmux_conf_battery_bar_palette=${tmux_conf_battery_bar_palette:-gradient}
# tmux_conf_battery_hbar_palette=${tmux_conf_battery_hbar_palette:-gradient}
# tmux_conf_battery_vbar_palette=${tmux_conf_battery_vbar_palette:-gradient}
# tmux_conf_battery_status_charging=$(_decode_unicode_escapes &amp;#34;${tmux_conf_battery_status_charging:-↑}&amp;#34;) # U+2191
# tmux_conf_battery_status_discharging=$(_decode_unicode_escapes &amp;#34;${tmux_conf_battery_status_discharging:-↓}&amp;#34;) # U+2193
#
# _pkillf &amp;#34;cut -c3- &amp;#39;$TMUX_CONF&amp;#39; \| sh -s _battery&amp;#34;
# _battery_info
# if [ &amp;#34;$battery_charge&amp;#34; != 0 ]; then
# case &amp;#34;$status_left $status_right&amp;#34; in
# *&amp;#39;#{battery_&amp;#39;*|*&amp;#39;#{?battery_&amp;#39;*)
# status_left=$(echo &amp;#34;$status_left&amp;#34; | sed -E \
# -e &amp;#39;s%#\{\?battery_bar%#\{?@battery_percentage%g&amp;#39; \
# -e &amp;#39;s%#\{\?battery_hbar%#\{?@battery_percentage%g&amp;#39; \
# -e &amp;#39;s%#\{\?battery_vbar%#\{?@battery_percentage%g&amp;#39; \
# -e &amp;#34;s%#\{battery_bar\}%#(nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _bar &amp;#39;$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_battery_bar_palette&amp;#34; | tr &amp;#39;,&amp;#39; &amp;#39;;&amp;#39;)&amp;#39; &amp;#39;$tmux_conf_battery_bar_symbol_empty&amp;#39; &amp;#39;$tmux_conf_battery_bar_symbol_full&amp;#39; &amp;#39;$tmux_conf_battery_bar_length&amp;#39; &amp;#39;#{@battery_charge}&amp;#39; &amp;#39;#{client_width}&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#\{battery_hbar\}%#(nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hbar &amp;#39;$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_battery_hbar_palette&amp;#34; | tr &amp;#39;,&amp;#39; &amp;#39;;&amp;#39;)&amp;#39; &amp;#39;#{@battery_charge}&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#\{battery_vbar\}%#(nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _vbar &amp;#39;$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_battery_vbar_palette&amp;#34; | tr &amp;#39;,&amp;#39; &amp;#39;;&amp;#39;)&amp;#39; &amp;#39;#{@battery_charge}&amp;#39;)%g&amp;#34; \
# -e &amp;#39;s%#\{(\?)?battery_status%#\{\1@battery_status%g&amp;#39; \
# -e &amp;#39;s%#\{(\?)?battery_percentage%#\{\1@battery_percentage%g&amp;#39;)
# status_right=$(echo &amp;#34;$status_right&amp;#34; | sed -E \
# -e &amp;#39;s%#\{\?battery_bar%#\{?@battery_percentage%g&amp;#39; \
# -e &amp;#39;s%#\{\?battery_hbar%#\{?@battery_percentage%g&amp;#39; \
# -e &amp;#39;s%#\{\?battery_vbar%#\{?@battery_percentage%g&amp;#39; \
# -e &amp;#34;s%#\{battery_bar\}%#(nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _bar &amp;#39;$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_battery_bar_palette&amp;#34; | tr &amp;#39;,&amp;#39; &amp;#39;;&amp;#39;)&amp;#39; &amp;#39;$tmux_conf_battery_bar_symbol_empty&amp;#39; &amp;#39;$tmux_conf_battery_bar_symbol_full&amp;#39; &amp;#39;$tmux_conf_battery_bar_length&amp;#39; &amp;#39;#{@battery_charge}&amp;#39; &amp;#39;#{client_width}&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#\{battery_hbar\}%#(nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hbar &amp;#39;$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_battery_hbar_palette&amp;#34; | tr &amp;#39;,&amp;#39; &amp;#39;;&amp;#39;)&amp;#39; &amp;#39;#{@battery_charge}&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#\{battery_vbar\}%#(nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _vbar &amp;#39;$(printf &amp;#39;%s&amp;#39; &amp;#34;$tmux_conf_battery_vbar_palette&amp;#34; | tr &amp;#39;,&amp;#39; &amp;#39;;&amp;#39;)&amp;#39; &amp;#39;#{@battery_charge}&amp;#39;)%g&amp;#34; \
# -e &amp;#39;s%#\{(\?)?battery_status%#\{\1@battery_status%g&amp;#39; \
# -e &amp;#39;s%#\{(\?)?battery_percentage%#\{\1@battery_percentage%g&amp;#39;)
# status_right=&amp;#34;#(echo; nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _battery_status &amp;#39;$tmux_conf_battery_status_charging&amp;#39; &amp;#39;$tmux_conf_battery_status_discharging&amp;#39;)$status_right&amp;#34;
# interval=60
# if [ &amp;#34;$_tmux_version&amp;#34; -ge 320 ]; then
# tmux run -b &amp;#34;trap &amp;#39;[ -n \&amp;#34;\$sleep_pid\&amp;#34; ] &amp;amp;&amp;amp; kill -9 \&amp;#34;\$sleep_pid\&amp;#34;; exit 0&amp;#39; TERM; while [ x\&amp;#34;\$(&amp;#39;$TMUX_PROGRAM&amp;#39; -S &amp;#39;#{socket_path}&amp;#39; display -p &amp;#39;#{l:#{pid}}&amp;#39;)\&amp;#34; = x\&amp;#34;#{pid}\&amp;#34; ]; do nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _battery_info; sleep $interval &amp;amp; sleep_pid=\$!; wait \&amp;#34;\$sleep_pid\&amp;#34;; sleep_pid=; done&amp;#34;
# elif [ &amp;#34;$_tmux_version&amp;#34; -ge 280 ]; then
# status_right=&amp;#34;#(echo; while [ x\&amp;#34;\$(&amp;#39;$TMUX_PROGRAM&amp;#39; -S &amp;#39;#{socket_path}&amp;#39; display -p &amp;#39;#{l:#{pid}}&amp;#39;)\&amp;#34; = x\&amp;#34;#{pid}\&amp;#34; ]; do nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _battery_info; sleep $interval; done)$status_right&amp;#34;
# elif [ &amp;#34;$_tmux_version&amp;#34; -gt 240 ]; then
# status_right=&amp;#34;#(echo; while :; do nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _battery_info; sleep $interval; done)$status_right&amp;#34;
# else
# status_right=&amp;#34;#(nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _battery_info)$status_right&amp;#34;
# fi
# ;;
# esac
# fi
#
# case &amp;#34;$status_left $status_right&amp;#34; in
# *&amp;#39;#{username}&amp;#39;*|*&amp;#39;#{hostname}&amp;#39;*|*&amp;#39;#{hostname_full}&amp;#39;*|*&amp;#39;#{username_ssh}&amp;#39;*|*&amp;#39;#{hostname_ssh}&amp;#39;*|*&amp;#39;#{hostname_full_ssh}&amp;#39;*)
# status_left=$(echo &amp;#34;$status_left&amp;#34; | sed \
# -e &amp;#34;s%#{username}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false false &amp;#39;#h&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_full}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false true &amp;#39;#H&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{username_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true false &amp;#39;#h&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_full_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true true &amp;#39;#H&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34;)
# status_right=$(echo &amp;#34;$status_right&amp;#34; | sed \
# -e &amp;#34;s%#{username}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false false &amp;#39;#h&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_full}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; false true &amp;#39;#H&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{username_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _username &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true false &amp;#39;#h&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34; \
# -e &amp;#34;s%#{hostname_full_ssh}%#(cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _hostname &amp;#39;#{pane_pid}&amp;#39; &amp;#39;#{b:pane_tty}&amp;#39; true true &amp;#39;#H&amp;#39; &amp;#39;#D&amp;#39;)%g&amp;#34;)
# ;;
# esac
#
# _pkillf &amp;#34;cut -c3- &amp;#39;$TMUX_CONF&amp;#39; \| sh -s _uptime&amp;#34;
# case &amp;#34;$status_left $status_right&amp;#34; in
# *&amp;#39;#{uptime_&amp;#39;*|*&amp;#39;#{?uptime_&amp;#39;*)
# status_left=$(echo &amp;#34;$status_left&amp;#34; | perl -p -e &amp;#39;
# ; s/#\{(\?)?uptime_y\b/#\{\1\@uptime_y/g
# ; s/#\{(\?)?uptime_d\b/#\{\1\@uptime_d/g
# ; s/\@uptime_d\b/\@uptime_dy/g if /\@uptime_y\b/
# ; s/#\{(\?)?uptime_h\b/#\{\1\@uptime_h/g
# ; s/#\{(\?)?uptime_m\b/#\{\1\@uptime_m/g
# ; s/#\{(\?)?uptime_s\b/#\{\1\@uptime_s/g&amp;#39;)
# status_right=$(echo &amp;#34;$status_right&amp;#34; | perl -p -e &amp;#39;
# ; s/#\{(\?)?uptime_y\b/#\{\1\@uptime_y/g
# ; s/#\{(\?)?uptime_d\b/#\{\1\@uptime_d/g
# ; s/\@uptime_d\b/\@uptime_dy/g if /\@uptime_y\b/
# ; s/#\{(\?)?uptime_h\b/#\{\1\@uptime_h/g
# ; s/#\{(\?)?uptime_m\b/#\{\1\@uptime_m/g
# ; s/#\{(\?)?uptime_s\b/#\{\1\@uptime_s/g&amp;#39;)
# interval=60
# case &amp;#34;$status_left $status_right&amp;#34; in
# *&amp;#39;#{@uptime_s}&amp;#39;*)
# interval=$(tmux show -gv status-interval)
# ;;
# esac
# if [ &amp;#34;$_tmux_version&amp;#34; -ge 320 ]; then
# tmux run -b &amp;#34;trap &amp;#39;[ -n \&amp;#34;\$sleep_pid\&amp;#34; ] &amp;amp;&amp;amp; kill -9 \&amp;#34;\$sleep_pid\&amp;#34;; exit 0&amp;#39; TERM; while [ x\&amp;#34;\$(&amp;#39;$TMUX_PROGRAM&amp;#39; -S &amp;#39;#{socket_path}&amp;#39; display -p &amp;#39;#{l:#{pid}}&amp;#39;)\&amp;#34; = x\&amp;#34;#{pid}\&amp;#34; ]; do nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _uptime; sleep $interval &amp;amp; sleep_pid=\$!; wait \&amp;#34;\$sleep_pid\&amp;#34;; sleep_pid=; done&amp;#34;
# elif [ &amp;#34;$_tmux_version&amp;#34; -ge 280 ]; then
# status_right=&amp;#34;#(echo; while [ x\&amp;#34;\$(&amp;#39;$TMUX_PROGRAM&amp;#39; -S &amp;#39;#{socket_path}&amp;#39; display -p &amp;#39;#{l:#{pid}}&amp;#39;)\&amp;#34; = x\&amp;#34;#{pid}\&amp;#34; ]; do nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _uptime; sleep $interval; done)$status_right&amp;#34;
# elif [ &amp;#34;$_tmux_version&amp;#34; -gt 240 ]; then
# status_right=&amp;#34;#(echo; while :; do nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _uptime; sleep $interval; done)$status_right&amp;#34;
# else
# status_right=&amp;#34;#(nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _uptime)$status_right&amp;#34;
# fi
# ;;
# esac
#
# _pkillf &amp;#34;cut -c3- &amp;#39;$TMUX_CONF&amp;#39; \| sh -s _loadavg&amp;#34;
# case &amp;#34;$status_left $status_right&amp;#34; in
# *&amp;#39;#{loadavg&amp;#39;*|*&amp;#39;#{?loadavg&amp;#39;*)
# status_left=$(echo &amp;#34;$status_left&amp;#34; | sed -E \
# -e &amp;#39;s/#\{(\?)?loadavg/#\{\1@loadavg/g&amp;#39;)
# status_right=$(echo &amp;#34;$status_right&amp;#34; | sed -E \
# -e &amp;#39;s/#\{(\?)?loadavg/#\{\1@loadavg/g&amp;#39;)
# interval=$(tmux show -gv status-interval)
# if [ &amp;#34;$_tmux_version&amp;#34; -ge 320 ]; then
# tmux run -b &amp;#34;trap &amp;#39;[ -n \&amp;#34;\$sleep_pid\&amp;#34; ] &amp;amp;&amp;amp; kill -9 \&amp;#34;\$sleep_pid\&amp;#34;; exit 0&amp;#39; TERM; while [ x\&amp;#34;\$(&amp;#39;$TMUX_PROGRAM&amp;#39; -S &amp;#39;#{socket_path}&amp;#39; display -p &amp;#39;#{l:#{pid}}&amp;#39;)\&amp;#34; = x\&amp;#34;#{pid}\&amp;#34; ]; do nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _loadavg; sleep $interval &amp;amp; sleep_pid=\$!; wait \&amp;#34;\$sleep_pid\&amp;#34;; sleep_pid=; done&amp;#34;
# elif [ &amp;#34;$_tmux_version&amp;#34; -ge 280 ]; then
# status_right=&amp;#34;#(echo; while [ x\&amp;#34;\$(&amp;#39;$TMUX_PROGRAM&amp;#39; -S &amp;#39;#{socket_path}&amp;#39; display -p &amp;#39;#{l:#{pid}}&amp;#39;)\&amp;#34; = x\&amp;#34;#{pid}\&amp;#34; ]; do nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _loadavg; sleep $interval; done)$status_right&amp;#34;
# elif [ &amp;#34;$_tmux_version&amp;#34; -gt 240 ]; then
# status_right=&amp;#34;#(echo; while :; do nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _loadavg; sleep $interval; done)$status_right&amp;#34;
# else
# status_right=&amp;#34;#(nice cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s _loadavg)$status_right&amp;#34;
# fi
# ;;
# esac
#
# # -- custom variables ------------------------------------------------------
#
# if [ -f &amp;#34;$TMUX_CONF_LOCAL&amp;#34; ] &amp;amp;&amp;amp; [ &amp;#34;$(cut -c3- &amp;#34;$TMUX_CONF_LOCAL&amp;#34; | sh 2&amp;gt;/dev/null -s printf probe)&amp;#34; = &amp;#34;probe&amp;#34; ]; then
# replacements=$(perl -n -e &amp;#39;print if s!^#\s+([^_][^()\s]+)\s*\(\)\s*{\s*(?:#.*)?\n!s%#\\\{\1((?:\\s+(?:[^\{\}]+?|#\\{(?:[^\{\}]+?)\}))*)\\\}%#(cut -c3- \&amp;#34;\\\$TMUX_CONF_LOCAL\&amp;#34; | sh -s \1\\1)%g; !p&amp;#39; &amp;#34;$TMUX_CONF_LOCAL&amp;#34;)
# status_left=$(echo &amp;#34;$status_left&amp;#34; | perl -p -e &amp;#34;$replacements&amp;#34; || echo &amp;#34;$status_left&amp;#34;)
# status_right=$(echo &amp;#34;$status_right&amp;#34; | perl -p -e &amp;#34;$replacements&amp;#34; || echo &amp;#34;$status_right&amp;#34;)
# fi
#
# # --------------------------------------------------------------------------
#
# tmux set -g set-titles-string &amp;#34;$(_decode_unicode_escapes &amp;#34;$set_titles_string&amp;#34;)&amp;#34; \;\
# setw -g window-status-format &amp;#34;$(_decode_unicode_escapes &amp;#34;$window_status_format&amp;#34;)&amp;#34; \;\
# setw -g window-status-current-format &amp;#34;$(_decode_unicode_escapes &amp;#34;$window_status_current_format&amp;#34;)&amp;#34; \;\
# set -g status-left-length 1000 \; set -g status-left &amp;#34;$(_decode_unicode_escapes &amp;#34;$status_left&amp;#34;)&amp;#34; \;\
# set -g status-right-length 1000 \; set -g status-right &amp;#34;$(_decode_unicode_escapes &amp;#34;$status_right&amp;#34;)&amp;#34;
# }
#
# __apply_plugins() {
# TMUX_PLUGIN_MANAGER_PATH=&amp;#34;$1&amp;#34;
# window_active=&amp;#34;$2&amp;#34;
# tmux_conf_update_plugins_on_launch=&amp;#34;$3&amp;#34;
# tmux_conf_update_plugins_on_reload=&amp;#34;$4&amp;#34;
# tmux_conf_uninstall_plugins_on_reload=&amp;#34;$5&amp;#34;
#
# if [ -z &amp;#34;$TMUX_PLUGIN_MANAGER_PATH&amp;#34; ]; then
# return 255
# fi
# mkdir -p &amp;#34;$TMUX_PLUGIN_MANAGER_PATH&amp;#34;
#
# tpm_plugins=$(tmux show -gvq &amp;#39;@tpm_plugins&amp;#39; 2&amp;gt;/dev/null)
# if [ -z &amp;#34;$(tmux show -gv &amp;#39;@plugin&amp;#39; 2&amp;gt;/dev/null)&amp;#34; ] &amp;amp;&amp;amp; [ -z &amp;#34;$tpm_plugins&amp;#34; ]; then
# if _is_true &amp;#34;$tmux_conf_uninstall_plugins_on_reload&amp;#34; &amp;amp;&amp;amp; [ -d &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm&amp;#34; ]; then
# tmux display &amp;#39;Uninstalling tpm and plugins...&amp;#39;
# tmux set-environment -gu TMUX_PLUGIN_MANAGER_PATH
# rm -rf &amp;#34;$TMUX_PLUGIN_MANAGER_PATH&amp;#34;
# tmux display &amp;#39;Done uninstalling tpm and plugins...&amp;#39;
# fi
# else
# if [ &amp;#34;$(command tmux display -p &amp;#39;#{pid} #{version} #{socket_path}&amp;#39;)&amp;#34; = &amp;#34;$($TMUX_PROGRAM display -p &amp;#39;#{pid} #{version} #{socket_path}&amp;#39;)&amp;#34; ]; then
# tpm_plugins=$(cat &amp;lt;&amp;lt; EOF | tr &amp;#39; &amp;#39; &amp;#39;\n&amp;#39; | awk &amp;#39;/^\s*$/ {next;}; !seen[$0]++ { gsub(/^[ \t]+/,&amp;#34;&amp;#34;,$0); gsub(/[ \t]+$/,&amp;#34;&amp;#34;,$0); print $0 }&amp;#39;
# $tpm_plugins
# $(awk &amp;#39;/^[ \t]*set(-option)?.*[ \t]@plugin[ \t]/ { gsub(/&amp;#39;\&amp;#39;&amp;#39;/, &amp;#34;&amp;#34;); gsub(/&amp;#39;\&amp;#34;&amp;#39;/, &amp;#34;&amp;#34;); print $NF }&amp;#39; &amp;#34;$TMUX_CONF_LOCAL&amp;#34; 2&amp;gt;/dev/null)
# EOF
# )
# tmux set-environment -g TMUX_PLUGIN_MANAGER_PATH &amp;#34;$TMUX_PLUGIN_MANAGER_PATH&amp;#34;
# tmux set -g &amp;#39;@tpm_plugins&amp;#39; &amp;#34;$tpm_plugins&amp;#34;
#
# if [ -d &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm&amp;#34; ]; then
# [ -z &amp;#34;$(tmux show -gqv &amp;#39;@tpm-install&amp;#39;)&amp;#34; ] &amp;amp;&amp;amp; tmux set -g &amp;#39;@tpm-install&amp;#39; &amp;#39;I&amp;#39;
# [ -z &amp;#34;$(tmux show -gqv &amp;#39;@tpm-update&amp;#39;)&amp;#34; ] &amp;amp;&amp;amp; tmux set -g &amp;#39;@tpm-update&amp;#39; &amp;#39;u&amp;#39;
# [ -z &amp;#34;$(tmux show -gqv &amp;#39;@tpm-clean&amp;#39;)&amp;#34; ] &amp;amp;&amp;amp; tmux set -g &amp;#39;@tpm-clean&amp;#39; &amp;#39;M-u&amp;#39;
# &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm&amp;#34; || tmux display &amp;#34;One or more tpm plugin(s) failed&amp;#34;
# fi
#
# if git ls-remote -hq https://github.com/gpakosz/.tmux.git master &amp;gt; /dev/null; then
# if [ ! -d &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm&amp;#34; ]; then
# install_tpm=true
# tmux display &amp;#39;Installing tpm and plugins...&amp;#39;
# git clone --depth 1 https://github.com/tmux-plugins/tpm &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm&amp;#34;
# elif { [ -z &amp;#34;$window_active&amp;#34; ] &amp;amp;&amp;amp; _is_true &amp;#34;$tmux_conf_update_plugins_on_launch&amp;#34;; } || { [ -n &amp;#34;$window_active&amp;#34; ] &amp;amp;&amp;amp; _is_true &amp;#34;$tmux_conf_update_plugins_on_reload&amp;#34;; }; then
# update_tpm=true
# tmux display &amp;#39;Updating tpm and plugins...&amp;#39;
# (cd &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm&amp;#34; &amp;amp;&amp;amp; git fetch -q -p &amp;amp;&amp;amp; git checkout -q master &amp;amp;&amp;amp; git reset -q --hard origin/master)
# fi
# if [ &amp;#34;$install_tpm&amp;#34; = &amp;#34;true&amp;#34; ] || [ &amp;#34;$update_tpm&amp;#34; = &amp;#34;true&amp;#34; ]; then
# perl -0777 -p -i -e &amp;#39;s/git clone(?!\s+--depth\s+1)/git clone --depth 1/g
# ;s/(install_plugin(.(?!&amp;amp;))*)\n(\s+)done/\1&amp;amp;\n\3done\n\3wait/g&amp;#39; &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm/scripts/install_plugins.sh&amp;#34;
# perl -p -i -e &amp;#39;s/git submodule update --init --recursive(?!\s+--depth\s+1)/git submodule update --init --recursive --depth 1/g&amp;#39; &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm/scripts/update_plugin.sh&amp;#34;
# perl -p -i -e &amp;#39;s,\$tmux_file\s+&amp;gt;/dev/null\s+2&amp;gt;\&amp;amp;1,$&amp;amp; || { tmux display &amp;#34;Plugin \$(basename \${plugin_path}) failed&amp;#34; &amp;amp;&amp;amp; false; },&amp;#39; &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm/scripts/source_plugins.sh&amp;#34;
# fi
# if [ &amp;#34;$update_tpm&amp;#34; = &amp;#34;true&amp;#34; ]; then
# {
# {
# printf &amp;#39;List of discovered tpm plugins: %s\n&amp;#39; &amp;#34;$(printf &amp;#39;%s\n&amp;#39; &amp;#34;$tpm_plugins&amp;#34; | paste -s -d &amp;#39; &amp;#39; -)&amp;#34; | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# printf &amp;#39;%s\n&amp;#39; &amp;#34;Invoking $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins&amp;#34; | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins&amp;#34; 2&amp;gt;&amp;amp;1 | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# printf &amp;#39;%s\n&amp;#39; &amp;#34;Invoking $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/update_plugins all&amp;#34; | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm/bin/update_plugins&amp;#34; all 2&amp;gt;&amp;amp;1 | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# printf &amp;#39;%s\n&amp;#39; &amp;#34;Invoking $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/clean_plugins all&amp;#34; | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm/bin/clean_plugins&amp;#34; all 2&amp;gt;&amp;amp;1 | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# printf &amp;#39;Done.\n&amp;#39; | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# printf &amp;#39;\n&amp;#39;
# } &amp;gt;&amp;gt; &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm_log.txt&amp;#34;
#
# tmux display &amp;#39;Done updating tpm and plugins...&amp;#39;
# } || tmux display &amp;#39;Failed updating tpm and plugins...&amp;#39;
# elif [ &amp;#34;$install_tpm&amp;#34; = &amp;#34;true&amp;#34; ]; then
# {
# {
# printf &amp;#39;List of discovered tpm plugins: %s\n&amp;#39; &amp;#34;$(printf &amp;#39;%s\n&amp;#39; &amp;#34;$tpm_plugins&amp;#34; | paste -s -d &amp;#39; &amp;#39; -)&amp;#34; | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# printf &amp;#39;%s\n&amp;#39; &amp;#34;Invoking $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins&amp;#34; | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins&amp;#34; 2&amp;gt;&amp;amp;1 | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# printf &amp;#39;Done.\n&amp;#39; | perl -MPOSIX=strftime -MTime::HiRes=gettimeofday -pe &amp;#39;my ($s, $us) = gettimeofday(); printf (&amp;#34;[%s.%03d]\t &amp;#34;, strftime(&amp;#34;%Y-%m-%d %H:%M:%S&amp;#34;, localtime $s), $us / 1000)&amp;#39;
# printf &amp;#39;\n&amp;#39; &amp;gt;&amp;gt; &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm_log.txt&amp;#34;
# } &amp;gt;&amp;gt; &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm_log.txt&amp;#34;
#
# tmux display &amp;#39;Done installing tpm and plugins...&amp;#39;
#
# [ -z &amp;#34;$(tmux show -gqv &amp;#39;@tpm-install&amp;#39;)&amp;#34; ] &amp;amp;&amp;amp; tmux set -g &amp;#39;@tpm-install&amp;#39; &amp;#39;I&amp;#39;
# [ -z &amp;#34;$(tmux show -gqv &amp;#39;@tpm-update&amp;#39;)&amp;#34; ] &amp;amp;&amp;amp; tmux set -g &amp;#39;@tpm-update&amp;#39; &amp;#39;u&amp;#39;
# [ -z &amp;#34;$(tmux show -gqv &amp;#39;@tpm-clean&amp;#39;)&amp;#34; ] &amp;amp;&amp;amp; tmux set -g &amp;#39;@tpm-clean&amp;#39; &amp;#39;M-u&amp;#39;
# &amp;#34;$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm&amp;#34; || tmux display &amp;#34;One or more tpm plugin(s) failed&amp;#34;
# } || tmux display &amp;#39;Failed installing tpm and plugins...&amp;#39;
# fi
# else
# tmux display &amp;#34;GitHub doesn&amp;#39;t seem to be reachable, skipping installing and/or updating tpm and plugins...&amp;#34;
# fi
# else
# tmux run -b &amp;#34;sleep \$((#{display-time} / 1000)) &amp;amp;&amp;amp; &amp;#39;$TMUX_PROGRAM&amp;#39; set display-time 3000 \; display &amp;#39;Cannot use tpm which assumes a globally installed tmux&amp;#39; \; set -u display-time&amp;#34;
# fi
#
# if [ &amp;#34;$_tmux_version&amp;#34; -gt 260 ]; then
# tmux set -gu &amp;#39;@tpm-install&amp;#39; \; set -gu &amp;#39;@tpm-update&amp;#39; \; set -gu &amp;#39;@tpm-clean&amp;#39; \; set -gu &amp;#39;@plugin&amp;#39; \; set -gu &amp;#39;@tpm_plugins&amp;#39;
# else
# tmux set -g &amp;#39;@tpm-install&amp;#39; &amp;#39;&amp;#39; \; set -g &amp;#39;@tpm-update&amp;#39; &amp;#39;&amp;#39; \; set -g &amp;#39;@tpm-clean&amp;#39; &amp;#39;&amp;#39; \; set -g &amp;#39;@plugin&amp;#39; &amp;#39;&amp;#39; \; set-gu &amp;#39;@tpm_plugins&amp;#39; &amp;#39;&amp;#39;
# fi
# fi
# }
#
# _apply_plugins() {
# tmux_conf_update_plugins_on_launch=${tmux_conf_update_plugins_on_launch:-true}
# tmux_conf_update_plugins_on_reload=${tmux_conf_update_plugins_on_reload:-true}
# tmux_conf_uninstall_plugins_on_reload=${tmux_conf_uninstall_plugins_on_reload:-true}
#
# if [ -z &amp;#34;$TMUX_PLUGIN_MANAGER_PATH&amp;#34; ]; then
# if [ &amp;#34;$(dirname &amp;#34;$TMUX_CONF&amp;#34;)&amp;#34; = &amp;#34;$HOME&amp;#34; ]; then
# TMUX_PLUGIN_MANAGER_PATH=&amp;#34;$HOME/.tmux/plugins&amp;#34;
# else
# TMUX_PLUGIN_MANAGER_PATH=&amp;#34;$(dirname &amp;#34;$TMUX_CONF&amp;#34;)/plugins&amp;#34;
# fi
# fi
# tmux run -b &amp;#34;cut -c3- &amp;#39;$TMUX_CONF&amp;#39; | sh -s __apply_plugins &amp;#39;$TMUX_PLUGIN_MANAGER_PATH&amp;#39; &amp;#39;$window_active&amp;#39; &amp;#39;$tmux_conf_update_plugins_on_launch&amp;#39; &amp;#39;$tmux_conf_update_plugins_on_reload&amp;#39; &amp;#39;$tmux_conf_uninstall_plugins_on_reload&amp;#39;&amp;#34;
# }
#
# _apply_important() {
# cfg=$(mktemp) &amp;amp;&amp;amp; trap &amp;#39;rm -f $cfg*&amp;#39; EXIT
#
# if perl -n -e &amp;#39;print if /^\s*(?:set|bind|unbind).+?#!important\s*$/&amp;#39; &amp;#34;$TMUX_CONF_LOCAL&amp;#34; 2&amp;gt;/dev/null &amp;gt; &amp;#34;$cfg.local&amp;#34;; then
# if ! tmux source-file &amp;#34;$cfg.local&amp;#34;; then
# if tmux source-file -v /dev/null 2&amp;gt; /dev/null; then
# verbose_flag=&amp;#39;-v&amp;#39;
# fi
# while ! out=$(tmux source-file &amp;#34;${verbose_flag:+$verbose_flag}&amp;#34; &amp;#34;$cfg.local&amp;#34;); do
# line=$(printf &amp;#34;%s&amp;#34; &amp;#34;$out&amp;#34; | tail -1 | cut -d&amp;#39;:&amp;#39; -f2)
# perl -n -i -e &amp;#34;if ($. != $line) { print }&amp;#34; &amp;#34;$cfg.local&amp;#34;
# done
# fi
# fi
# }
#
# _apply_configuration() {
# window_active=&amp;#34;$(tmux display -p &amp;#39;#{window_active}&amp;#39; 2&amp;gt;/dev/null || true)&amp;#34;
# if [ -z &amp;#34;$window_active&amp;#34; ]; then
# if ! command -v perl &amp;gt; /dev/null 2&amp;gt;&amp;amp;1; then
# tmux run -b &amp;#39;tmux set display-time 3000 \; display &amp;#34;This configuration requires perl&amp;#34; \; set -u display-time \; run &amp;#34;sleep 3&amp;#34; \; kill-server&amp;#39;
# return
# fi
# if ! perl -MTime::HiRes -e1 &amp;gt; /dev/null 2&amp;gt;&amp;amp;1; then
# tmux run -b &amp;#39;tmux set display-time 3000 \; display &amp;#34;This configuration requires perl Time::HiRes&amp;#34; \; set -u display-time \; run &amp;#34;sleep 3&amp;#34; \; kill-server&amp;#39;
# return
# fi
# if ! command -v sed &amp;gt; /dev/null 2&amp;gt;&amp;amp;1; then
# tmux run -b &amp;#39;tmux set display-time 3000 \; display &amp;#34;This configuration requires sed&amp;#34; \; set -u display-time \; run &amp;#34;sleep 3&amp;#34; \; kill-server&amp;#39;
# return
# fi
# if ! command -v awk &amp;gt; /dev/null 2&amp;gt;&amp;amp;1; then
# tmux run -b &amp;#39;tmux set display-time 3000 \; display &amp;#34;This configuration requires awk&amp;#34; \; set -u display-time \; run &amp;#34;sleep 3&amp;#34; \; kill-server&amp;#39;
# return
# fi
# if [ &amp;#34;$_tmux_version&amp;#34; -lt 260 ]; then
# tmux run -b &amp;#39;tmux set display-time 3000 \; display &amp;#34;This configuration requires tmux 2.6+&amp;#34; \; set -u display-time \; run &amp;#34;sleep 3&amp;#34; \; kill-server&amp;#39;
# return
# fi
# fi
#
# case &amp;#34;$_uname_s&amp;#34; in
# *CYGWIN*|*MSYS*)
# # prevent Cygwin and MSYS2 from cd-ing into home directory when evaluating /etc/profile
# tmux setenv -g CHERE_INVOKING 1
# ;;
# esac
#
# _apply_tmux_256color
# _apply_24b&amp;amp;
# _apply_theme&amp;amp;
# _apply_bindings&amp;amp;
# wait
#
# _apply_plugins
# _apply_important
#
# # shellcheck disable=SC2046
# tmux setenv -gu tmux_conf_dummy $(printenv | grep -E -o &amp;#39;^tmux_conf_[^=]+&amp;#39; | awk &amp;#39;{printf &amp;#34;; setenv -gu %s&amp;#34;, $0}&amp;#39;)
# }
#
# _urlview() {
# pane_id=&amp;#34;$1&amp;#34;; shift
# tmux capture-pane -J -S - -E - -b &amp;#34;urlview-$pane_id&amp;#34; -t &amp;#34;$pane_id&amp;#34;
# tmux split-window &amp;#34;&amp;#39;$TMUX_PROGRAM&amp;#39; ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} show-buffer -b &amp;#39;urlview-$pane_id&amp;#39; | urlview || true; &amp;#39;$TMUX_PROGRAM&amp;#39; ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} delete-buffer -b &amp;#39;urlview-$pane_id&amp;#39;&amp;#34;
# }
#
# _urlscan() {
# pane_id=&amp;#34;$1&amp;#34;; shift
# tmux capture-pane -J -S - -E - -b &amp;#34;urlscan-$pane_id&amp;#34; -t &amp;#34;$pane_id&amp;#34;
# tmux split-window &amp;#34;&amp;#39;$TMUX_PROGRAM&amp;#39; ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} show-buffer -b &amp;#39;urlscan-$pane_id&amp;#39; | urlscan $* || true; &amp;#39;$TMUX_PROGRAM&amp;#39; ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} delete-buffer -b &amp;#39;urlscan-$pane_id&amp;#39;&amp;#34;
# }
#
# _fpp() {
# tmux capture-pane -J -S - -E - -b &amp;#34;fpp-$1&amp;#34; -t &amp;#34;$1&amp;#34;
# tmux split-window -c &amp;#34;$2&amp;#34; &amp;#34;&amp;#39;$TMUX_PROGRAM&amp;#39; ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} show-buffer -b &amp;#39;fpp-$1&amp;#39; | fpp || true; &amp;#39;$TMUX_PROGRAM&amp;#39; ${TMUX_SOCKET:+-S &amp;#34;$TMUX_SOCKET&amp;#34;} delete-buffer -b &amp;#39;fpp-$1&amp;#39;&amp;#34;
# }
#
# &amp;#34;$@&amp;#34;
&lt;/code>&lt;/pre></description></item><item><title>Tmux配置</title><link>https://caisong.github.io/posts/tmux.conf/</link><pubDate>Fri, 20 Dec 2024 21:41:37 +0800</pubDate><guid>https://caisong.github.io/posts/tmux.conf/</guid><description>&lt;pre tabindex="0">&lt;code class="language-config" data-lang="config"># remap prefix from &amp;#39;C-b&amp;#39; to &amp;#39;C-a&amp;#39;
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind &amp;#39;&amp;#34;&amp;#39;
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# don&amp;#39;t rename windows automatically
set-option -g allow-rename off

# DESIGN TWEAKS

# don&amp;#39;t do anything when a &amp;#39;bell&amp;#39; rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# clock mode
setw -g clock-mode-colour yellow

# copy mode
setw -g mode-style &amp;#39;fg=black bg=red bold&amp;#39;

# panes
set -g pane-border-style &amp;#39;fg=red&amp;#39;
set -g pane-active-border-style &amp;#39;fg=yellow&amp;#39;

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style &amp;#39;fg=red&amp;#39;

set -g status-left &amp;#39;&amp;#39;
set -g status-left-length 10

set -g status-right-style &amp;#39;fg=black bg=yellow&amp;#39;
set -g status-right &amp;#39;%Y-%m-%d %H:%M &amp;#39;
set -g status-right-length 50

setw -g window-status-current-style &amp;#39;fg=black bg=red&amp;#39;
setw -g window-status-current-format &amp;#39; #I #W #F &amp;#39;

setw -g window-status-style &amp;#39;fg=red bg=black&amp;#39;
setw -g window-status-format &amp;#39; #I #[fg=white]#W #[fg=yellow]#F &amp;#39;

setw -g window-status-bell-style &amp;#39;fg=yellow bg=red bold&amp;#39;

# messages
set -g message-style &amp;#39;fg=yellow bg=red bold&amp;#39;
&lt;/code>&lt;/pre></description></item><item><title>Tmux配置文件（修复版）</title><link>https://caisong.github.io/posts/tmux%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AE%E5%A4%8D%E7%89%88/</link><pubDate>Tue, 21 Dec 2021 21:42:26 +0800</pubDate><guid>https://caisong.github.io/posts/tmux%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AE%E5%A4%8D%E7%89%88/</guid><description>&lt;p>tmux配置文件（修复版）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>unbind C-b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g prefix C-a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind C-a send-prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind r source-file ~/.tmux.conf \; display &amp;#34;Reloaded!&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Use Shift-arrow keys to switch panes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind -n S-Left select-pane -L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind -n S-Right select-pane -R
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind -n S-Up select-pane -U
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind -n S-Down select-pane -D
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Alt-arrow to switch windows
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind -n M-Left previous-window
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind -n M-Right next-window
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#Enable mouse mode (tmux 2.1 and above)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setw -g mouse on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g mouse on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#Enable oh my zsh in tmux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#set -g default-command /bin/zsh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Mouse based copy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel &amp;#34;reattach-to-user-namespace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pbcopy&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel &amp;#34;reattach-to-user-namespace pbc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>opy&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#开启status-bar uft-8支持
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g status-utf8 on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置终端颜色为256色
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g default-terminal &amp;#34;screen-256color&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#开启status-bar uft-8支持
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g status-utf8 on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置pan前景色
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g pane-border-fg green
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置pane背景色
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g pane-border-bg black
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置活跃pane前景色
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g pane-active-border-fg white
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置活跃pane背景色
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g pane-active-border-bg yellow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置消息前景色
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g message-fg white
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置消息背景色
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g message-bg black
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置消息高亮显示
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g message-attr bright
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置status-bar颜色
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g status-fg white
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g status-bg black
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置窗口列表颜色
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setw -g window-status-style fg=cyan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setw -g window-status-style bg=default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setw -g window-status-style dim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置当前窗口在status bar中的颜色
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setw -g window-status-current-style fg=white
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setw -g window-status-current-style bg=red
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setw -g window-status-current-style bright
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#设置status bar格式
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g status-left-length 40
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g status-left &amp;#34;#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g status-right &amp;#34;#[fg=cyan]%b %d %R&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g status-interval 60
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -g status-justify centre
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>