<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Caisong's Blog</title><link>https://caisong.github.io/tags/linux/</link><description>Recent content in Linux on Caisong's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 01 Jan 2025 17:47:51 +0800</lastBuildDate><atom:link href="https://caisong.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>换行转换</title><link>https://caisong.github.io/posts/%E6%8D%A2%E8%A1%8C%E8%BD%AC%E6%8D%A2/</link><pubDate>Wed, 01 Jan 2025 17:47:51 +0800</pubDate><guid>https://caisong.github.io/posts/%E6%8D%A2%E8%A1%8C%E8%BD%AC%E6%8D%A2/</guid><description>&lt;p>转换windows换行符至Linux&lt;/p></description></item><item><title>简化代码</title><link>https://caisong.github.io/posts/%E7%AE%80%E5%8C%96%E4%BB%A3%E7%A0%81/</link><pubDate>Wed, 16 Oct 2024 21:41:47 +0800</pubDate><guid>https://caisong.github.io/posts/%E7%AE%80%E5%8C%96%E4%BB%A3%E7%A0%81/</guid><description>&lt;p>基于DPDK flow规则过滤流量（代码未写完）&lt;/p></description></item><item><title>　手动链接</title><link>https://caisong.github.io/posts/%E6%89%8B%E5%8A%A8%E9%93%BE%E6%8E%A5/</link><pubDate>Wed, 09 Oct 2024 21:41:53 +0800</pubDate><guid>https://caisong.github.io/posts/%E6%89%8B%E5%8A%A8%E9%93%BE%E6%8E%A5/</guid><description>&lt;p>通过解析ELF文件，实现ELF依赖库的加载&lt;/p></description></item><item><title>构建DPDK环境</title><link>https://caisong.github.io/posts/%E6%9E%84%E5%BB%BAdpdk%E7%8E%AF%E5%A2%83/</link><pubDate>Wed, 09 Oct 2024 21:41:46 +0800</pubDate><guid>https://caisong.github.io/posts/%E6%9E%84%E5%BB%BAdpdk%E7%8E%AF%E5%A2%83/</guid><description>&lt;p>构建DPDK环境 &lt;code>docker&lt;/code>镜像，未优化。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> ccr.ccs.tencentyun.com/library/centos:latest&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">LABEL&lt;/span> RUN docker run -it --privileged -v /sys/bus/pci/drivers:/sys/bus/pci/drivers -v /sys/kernel/mm/hugepages:/sys/kernel/mm/hugepages -v /sys/devices/system/node:/sys/devices/system/node -v /dev:/dev --name NAME -e NAME&lt;span style="color:#f92672">=&lt;/span>NAME -e IMAGE&lt;span style="color:#f92672">=&lt;/span>IMAGE IMAGE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">WORKDIR&lt;/span>&lt;span style="color:#e6db74"> /root&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> ./dpdk-23.11.1.tar.xz ./libpcap-1.10.4.tar.xz dpdk-kmods-linux.tar.gz pktgen-dpdk-pktgen-24.05.5.tar.gz /root&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># repo&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> sed -e &lt;span style="color:#e6db74">&amp;#34;s|^mirrorlist=|#mirrorlist=|g&amp;#34;&lt;/span> -e &lt;span style="color:#e6db74">&amp;#34;s|^#baseurl=http://mirror.centos.org/\$contentdir/\$releasever|baseurl=http://mirror.nju.edu.cn/centos-vault/8.5.2111|g&amp;#34;&lt;/span> -i.bak /etc/yum.repos.d/CentOS-*.repo&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> dnf makecache &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> dnf install epel-release -y&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> sed -e &lt;span style="color:#e6db74">&amp;#39;s!^metalink=!#metalink=!g&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e &lt;span style="color:#e6db74">&amp;#39;s!^#baseurl=!baseurl=!g&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e &lt;span style="color:#e6db74">&amp;#39;s!https\?://download\.fedoraproject\.org/pub/epel!http://mirror.nju.edu.cn/epel!g&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e &lt;span style="color:#e6db74">&amp;#39;s!https\?://download\.example/pub/epel!http://mirror.nju.edu.cn/epel!g&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -i /etc/yum.repos.d/epel&lt;span style="color:#f92672">{&lt;/span>,-testing&lt;span style="color:#f92672">}&lt;/span>.repo &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> dnf makecache&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> dnf install python39 python39-pyelftools -y &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> python3 -m pip install -i https://mirrors.cernet.edu.cn/pypi/web/simple --upgrade pip &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> pip config set global.index-url https://mirrors.cernet.edu.cn/pypi/web/simple &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> pip install ninja meson&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> dnf install bison flex gcc make autoconf numactl-devel openssl openssl-devel libatomic-devel libatomic zlib-devel libbsd-devel which -y&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> tar xvf libpcap-1.10.4.tar.xz &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd libpcap-1.10.4 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ./configure &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make install&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">WORKDIR&lt;/span>&lt;span style="color:#e6db74"> /root&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> tar xvf dpdk-23.11.1.tar.xz &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd dpdk-stable-23.11.1 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> meson build &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ninja -C build &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ninja -C build install &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> export PKG_CONFIG_PATH&lt;span style="color:#f92672">=&lt;/span>/usr/local/lib64/pkgconfig &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ldconfig&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">WORKDIR&lt;/span>&lt;span style="color:#e6db74"> /root&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> tar xvf pktgen-dpdk-pktgen-24.05.5.tar.gz &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd pktgen-dpdk-pktgen-24.05.5 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> sed -i &lt;span style="color:#e6db74">&amp;#34;168s/%l&amp;#39;d/%d/&amp;#34;&lt;/span> app/pktgen-port-cfg.c &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> meson build &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ninja -C build &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ninja -C build install&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">CMD&lt;/span> [&lt;span style="color:#e6db74">&amp;#34; /sbin/init&amp;#34;&lt;/span>]&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Kill zombie</title><link>https://caisong.github.io/posts/killzombie/</link><pubDate>Wed, 09 Oct 2024 21:41:03 +0800</pubDate><guid>https://caisong.github.io/posts/killzombie/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ps -A -o stat,ppid,pid,cmd | grep -e &lt;span style="color:#e6db74">&amp;#39;^[Zz]&amp;#39;&lt;/span> | awk &lt;span style="color:#e6db74">&amp;#39;{print $2}&amp;#39;&lt;/span> | xargs kill -9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>连通性检测</title><link>https://caisong.github.io/posts/%E8%BF%9E%E9%80%9A%E6%80%A7%E6%A3%80%E6%B5%8B/</link><pubDate>Thu, 18 Jul 2024 21:41:50 +0800</pubDate><guid>https://caisong.github.io/posts/%E8%BF%9E%E9%80%9A%E6%80%A7%E6%A3%80%E6%B5%8B/</guid><description>&lt;p>不使用第三方工具直接tcp检测网络端口连通性&lt;/p></description></item><item><title>ELF 字段说明</title><link>https://caisong.github.io/posts/elfhttpshansimov.gitbook.iogitbooki/</link><pubDate>Wed, 05 Jun 2024 21:40:26 +0800</pubDate><guid>https://caisong.github.io/posts/elfhttpshansimov.gitbook.iogitbooki/</guid><description>&lt;p>Cut out summary from your post content here.&lt;/p></description></item><item><title>自签HTTPS证书</title><link>https://caisong.github.io/posts/https%E8%AF%81%E4%B9%A6/</link><pubDate>Tue, 30 Aug 2022 21:40:59 +0800</pubDate><guid>https://caisong.github.io/posts/https%E8%AF%81%E4%B9%A6/</guid><description>&lt;h1 id="https证书">HTTPS证书&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo openssl req -x509 -nodes -days &lt;span style="color:#ae81ff">365&lt;/span> -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Linux网络概念</title><link>https://caisong.github.io/posts/linux%E7%BD%91%E7%BB%9C%E6%A6%82%E5%BF%B5/</link><pubDate>Thu, 14 Oct 2021 21:41:07 +0800</pubDate><guid>https://caisong.github.io/posts/linux%E7%BD%91%E7%BB%9C%E6%A6%82%E5%BF%B5/</guid><description>&lt;p>&lt;strong>这篇装载的，忘记转自哪儿了！侵删！&lt;/strong>&lt;/p>
&lt;h1 id="linux-网络概念">linux 网络概念&lt;/h1>
&lt;h2 id="虚拟网络设备">虚拟网络设备&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Network Namespace （以下简称netns）&lt;/p>
&lt;p>是Linux内核提供的一项实现网络隔离的功能，它能隔离多个不同的网络空间，并且各自拥有独立的网络协议栈，这其中便包括了网络接口（网卡），路由表，iptables规则等。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>veth pair&lt;/p>
&lt;p>是成对出现的一种虚拟网络设备接口，一端连着网络协议栈，一端彼此相连。如下图所示：
&lt;img src="https://pic2.zhimg.com/v2-6b0a6467e43cedacc73275b04421490d_r.jpg" alt="img">&lt;/p>
&lt;p>由于它的这个特性，常常被用于构建虚拟网络拓扑。例如连接两个不同的网络命名空间(netns)，连接docker容器，连接网桥(Bridge)等，其中一个很常见的案例就是OpenStack Neutron底层用它来构建非常复杂的网络拓扑。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tun/tap&lt;/p>
&lt;p>tun是网络层的虚拟网络设备，可以收发第三层数据报文包，如IP封包，因此常用于一些点对点IP隧道，例如OpenVPN，IPSec等。&lt;/p>
&lt;p>tap是链路层的虚拟网络设备，等同于一个以太网设备，它可以收发第二层数据报文包，如以太网数据帧。Tap最常见的用途就是做为虚拟机的网卡，因为它和普通的物理网卡更加相近，也经常用作普通机器的虚拟网卡。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bridge&lt;/p>
&lt;p>Linux Bridge（网桥）是用纯软件实现的虚拟交换机，有着和物理交换机相同的功能，例如二层交换，MAC地址学习等。因此我们可以把tun/tap，veth pair等设备绑定到网桥上，就像是把设备连接到物理交换机上一样。此外它和veth pair、tun/tap一样，也是一种虚拟网络设备，具有虚拟设备的所有特性，例如配置IP，MAC地址等。&lt;/p>
&lt;p>Linux Bridge通常是搭配KVM、docker等虚拟化技术一起使用的，用于构建虚拟网络。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>本地回环lo&lt;/p>
&lt;p>大多数操作系统都在网络层实现了环回能力，通常是使用一个虚拟的环回网络接口来实现。这个虚拟的环回网络接口看着像是一个真实的网卡，实际上是操作系统用软件模拟的，它可以通过&lt;code>TCP/IP&lt;/code>与同一台主机上的其他服务进行通信，以&lt;code>127&lt;/code>开头的&lt;code>IPv4&lt;/code>地址就是为它保留的，主流&lt;code>Linux&lt;/code>操作系统为环回网卡分配的地址都是&lt;code>127.0.0.1&lt;/code>，主机名是&lt;code>localhost&lt;/code>。&lt;/p>
&lt;p>环回网络接口之所以被称之为环回网络接口，**是因为从本机发送到本机任意一个IP的数据报文都会在网络层交给环回网络接口，不再下发到数据链路层进行处理，环回网络接口直接发送回网络层，最终交由应用层软件程序进行处理。**这种方式对于性能测试非常有用，因为省去了硬件的开销，可以直接测试协议栈软件所需要的时间。&lt;/p>
&lt;p>那环回网络接口是如何判断目的IP是否为本机地址的呢？答案就是网络层在进行路由转发的时候会先查本地的路由表，发现是本机IP后交给环回网络接口。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="设备">设备&lt;/h2>
&lt;ul>
&lt;li>网关&lt;/li>
&lt;/ul>
&lt;p>网关是 电信中使用的网络节点，它将具有不同传输协议的两个网络连接在一起。网关充当网络的入口和出口点，因为所有数据在路由之前必须经过网关或与网关通信。在大多数基于IP的网络中，唯一不通过至少一个网关的流量是在同一局域网（LAN）段上的节点之间流动的流量。术语默认网关或网络网关也可用于描述相同的概念。&lt;/p>
&lt;ul>
&lt;li>路由器&lt;/li>
&lt;/ul>
&lt;p>路由器（Router）是一种负责寻径的网络设备，它在互连网络中从多条路径中寻找通讯量最少的一条网络路径提供给用户通信。路由器用于连接多个逻辑上分开的网络。对用户提供最佳的通信路径，路由器利用路由表为数据传输选择路径，路由表包含网络地址以及各地址之间距离的清单，路由器利用路由表查找数据包从当前位置到目的地址的正确路径。路由器使用最少时间算法或最优路径算法来调整信息传递的路径，如果某一网络路径发生故障或堵塞，路由器可选择另一条路径，以保证信息的正常传输。路由器可进行数据格式的转换，成为不同协议之间网络互连的必要设备。&lt;/p>
&lt;h3 id="区别">区别&lt;/h3>
&lt;ol>
&lt;li>本质区别&lt;/li>
&lt;/ol>
&lt;p>网关这种设备它主要是用来连接两种不同的网络，同时，网关它还能够同时与两边的主机之间进行通信。但是两边的主机是不能够直接进行通信，是必须要经过网关才能进行通信。网关的工作是在应用层当中。&lt;/p>
&lt;p>路由器它是属于网络层设备，通常是以包为单位进行数据的发送。在路由器的子接口，是有分割广播域的作用，所以当我们用交换机做VLAN以后，都是要在路由器上做一个三层的路由。&lt;/p>
&lt;ol start="2">
&lt;li>使用方式的区别&lt;/li>
&lt;/ol>
&lt;p>网关它可以是路由器，交换机或者是PC。在同一网段之内进行通信，是不需要将网关介入其中，只有当主机个非本网段设备进行通信的时候，才需要将数据包全部发给网关设备，再经由网关设备进行转发或者是有路由处理等。&lt;/p>
&lt;p>路由器它是一个网络层系统，路由器在现在市场上一般是被分成了两大类，一类是单协议路由器，另一类是多协议路由器。路由器它可以进行数据格式的转换，成为不同于协议之间的网络互连的必要设备。&lt;/p>
&lt;ol start="3">
&lt;li>功能上的区别&lt;/li>
&lt;/ol>
&lt;p>网关可以分为传输型网关和应用型网关，它的功能是充当转换重任，实质上就是一个网络通向其他网络的IP地址。&lt;/p>
&lt;p>路由器的功能主要有：连通不同的网络和信息传输作用。按照使用可分为：接入、企业级、骨干级、太比特、多WAN以及3G无线等。&lt;/p></description></item><item><title>Linux查看库信息常用命令</title><link>https://caisong.github.io/posts/linux%E6%9F%A5%E7%9C%8B%E5%BA%93%E4%BF%A1%E6%81%AF%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Fri, 03 Sep 2021 21:41:06 +0800</pubDate><guid>https://caisong.github.io/posts/linux%E6%9F%A5%E7%9C%8B%E5%BA%93%E4%BF%A1%E6%81%AF%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>&lt;p>linux 查看库信息常用命令&lt;/p></description></item><item><title>Disable disk cache</title><link>https://caisong.github.io/posts/disablediskcache/</link><pubDate>Fri, 03 Sep 2021 21:40:38 +0800</pubDate><guid>https://caisong.github.io/posts/disablediskcache/</guid><description>&lt;p>disable disk cache&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>hdparm -W &lt;span style="color:#ae81ff">0&lt;/span> /dev/sda1 &lt;span style="color:#75715e">#disable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hdparm -W &lt;span style="color:#ae81ff">1&lt;/span> /dev/sda1 &lt;span style="color:#75715e">#enable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>构建LTP测试环境</title><link>https://caisong.github.io/posts/buildltpenv/</link><pubDate>Fri, 03 Sep 2021 21:40:30 +0800</pubDate><guid>https://caisong.github.io/posts/buildltpenv/</guid><description>&lt;p>板卡上运行LTP测试集，需要构建部分环境。&lt;/p></description></item><item><title>Linux开机启动</title><link>https://caisong.github.io/posts/linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</link><pubDate>Fri, 03 Sep 2021 21:04:38 +0800</pubDate><guid>https://caisong.github.io/posts/linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</guid><description>&lt;h2 id="etcinittab-line-syntax">/etc/inittab Line Syntax&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>id:rstate:action:process
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="etcinit----etcinitd">/etc/init &amp;amp;&amp;amp; /etc/init.d&lt;/h2>



 &lt;blockquote>
 &lt;p>&lt;code>/etc/init.d&lt;/code> contains scripts used by the System V init tools (SysVinit). This is the traditional service management package for Linux, containing the init program (the first process that is run when the kernel has finished initializing¹) as well as some infrastructure to start and stop services and configure them. Specifically, files in /etc/init.d are shell scripts that respond to start, stop, restart, and (when supported) reload commands to manage a particular service. These scripts can be invoked directly or (most commonly) via some other trigger (typically the presence of a symbolic link in &lt;code>/etc/rc?.d/&lt;/code>).&lt;/p></description></item><item><title>脚本备份</title><link>https://caisong.github.io/posts/%E8%84%9A%E6%9C%AC%E5%A4%87%E4%BB%BD/</link><pubDate>Fri, 03 Sep 2021 20:53:55 +0800</pubDate><guid>https://caisong.github.io/posts/%E8%84%9A%E6%9C%AC%E5%A4%87%E4%BB%BD/</guid><description>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>CppCheck&lt;/li>
&lt;li>putty solarized dark theme&lt;/li>
&lt;li>python sql server示例&lt;/li>
&lt;li>基于xinet服务部署&lt;/li>
&lt;/ul></description></item><item><title>Change Partion Size</title><link>https://caisong.github.io/posts/change-partion-size/</link><pubDate>Thu, 18 May 2017 17:41:05 +0800</pubDate><guid>https://caisong.github.io/posts/change-partion-size/</guid><description>&lt;p>修改分区大小&lt;/p></description></item><item><title>Depmod</title><link>https://caisong.github.io/posts/depmod/</link><pubDate>Wed, 17 May 2017 17:38:47 +0800</pubDate><guid>https://caisong.github.io/posts/depmod/</guid><description>&lt;p>module命令&lt;/p></description></item><item><title>用户记录操作</title><link>https://caisong.github.io/posts/%E7%94%A8%E6%88%B7%E8%AE%B0%E5%BD%95%E6%93%8D%E4%BD%9C/</link><pubDate>Wed, 22 Mar 2017 17:34:14 +0800</pubDate><guid>https://caisong.github.io/posts/%E7%94%A8%E6%88%B7%E8%AE%B0%E5%BD%95%E6%93%8D%E4%BD%9C/</guid><description>&lt;p>使用&lt;code>crontab&lt;/code>记录用户操作日志&lt;/p></description></item><item><title>时间相关函数</title><link>https://caisong.github.io/posts/time-util/</link><pubDate>Mon, 19 Dec 2016 22:44:11 +0800</pubDate><guid>https://caisong.github.io/posts/time-util/</guid><description>&lt;p>C 时间转换&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#incldue &amp;lt;time.h&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> tm &lt;span style="color:#75715e">//calendar time type
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> tm_sec; &lt;span style="color:#75715e">//[0,60](since C99)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> tm_min; &lt;span style="color:#75715e">//[0,59]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> tm_hour; &lt;span style="color:#75715e">//[0,23]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> tm_mday; &lt;span style="color:#75715e">//[1,31]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> tm_mon; &lt;span style="color:#75715e">//[0,11]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> tm_year; &lt;span style="color:#75715e">//year since 1900
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> tm_wday; &lt;span style="color:#75715e">//days since Sunday:[0~6]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> tm_wday; &lt;span style="color:#75715e">//day since Jan 1:[0,365]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> tm_isdst;&lt;span style="color:#75715e">//夏令时时间，&amp;gt;0:有效	=0：无效	&amp;lt;0: 不可用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">time_t&lt;/span>; &lt;span style="color:#75715e">//calendar time since epoch type
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">clock_t&lt;/span>; &lt;span style="color:#75715e">//processor time since era type
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> timespce{ &lt;span style="color:#75715e">//time in seconds and nanoseconds
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">time_t&lt;/span> tv_sec;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> tv_nsec;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">time_t&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>(&lt;span style="color:#66d9ef">time_t&lt;/span> &lt;span style="color:#f92672">*&lt;/span>calptr); &lt;span style="color:#75715e">//returns the current calendar time of the system as ime since epoch
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">double&lt;/span> &lt;span style="color:#a6e22e">difftime&lt;/span>(&lt;span style="color:#66d9ef">time_t&lt;/span> time_end, &lt;span style="color:#66d9ef">time_t&lt;/span> time_beg); &lt;span style="color:#75715e">//computes the difference between times
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">* format conversions
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">asctime&lt;/span>( &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> tm &lt;span style="color:#f92672">*&lt;/span>time_ptr); &lt;span style="color:#75715e">//converts a tm object to a textual representation
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">ctime&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">time_t&lt;/span> &lt;span style="color:#f92672">*&lt;/span>time); &lt;span style="color:#75715e">//converts a time_t object to a textual representation; as if by calling asctime(localtime(time));
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">struct&lt;/span> tm &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">gmtime&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">time_t&lt;/span> &lt;span style="color:#f92672">*&lt;/span>time); &lt;span style="color:#75715e">//convert time since epoch calendar time expressedd as UTC
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">struct&lt;/span> tm &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">localtime&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">time_t&lt;/span> &lt;span style="color:#f92672">*&lt;/span>time); &lt;span style="color:#75715e">//converts time since epoch calendar time expressed as local time 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">time_t&lt;/span> &lt;span style="color:#a6e22e">mktime&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> tm &lt;span style="color:#f92672">*&lt;/span>time); &lt;span style="color:#75715e">//converts calendar time to time since epoch
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">size_t&lt;/span> &lt;span style="color:#a6e22e">strftime&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>str, &lt;span style="color:#66d9ef">size_t&lt;/span> count, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>format, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> tm &lt;span style="color:#f92672">*&lt;/span>time); &lt;span style="color:#75715e">//converts a tm object to custom textual representation
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">strptime&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>s, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>format, &lt;span style="color:#66d9ef">struct&lt;/span> tm &lt;span style="color:#f92672">*&lt;/span>tm); &lt;span style="color:#75715e">//converse of strftime
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;sys/time.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">clockid_t :
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">CLOCK_REALTIME: 实时系统时间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">CLOCK_MONOTONIC: 不带负跳数的实时系统时间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">CLOCK_PROCESS_CPUTIME_ID: 调用进程CPU时间 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">CLOCK_THREAD_CPUTIME_ID: 调用线程CPU时间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">clock_gettime&lt;/span>(&lt;span style="color:#66d9ef">clockid_t&lt;/span> clock_id, &lt;span style="color:#66d9ef">struct&lt;/span> timespec &lt;span style="color:#f92672">*&lt;/span>tsp); &lt;span style="color:#75715e">//获取指定时钟的时间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">clock_getres&lt;/span>(&lt;span style="color:#66d9ef">clockid_t&lt;/span> clock_id, &lt;span style="color:#66d9ef">struct&lt;/span> timespec &lt;span style="color:#f92672">*&lt;/span>tsp); &lt;span style="color:#75715e">//设置指定时钟精度
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">clock_settime&lt;/span>(&lt;span style="color:#66d9ef">clockid_t&lt;/span> clodk_id, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> timespec &lt;span style="color:#f92672">*&lt;/span>tsp);&lt;span style="color:#75715e">//设置时钟时间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">gettimeofday&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> timeval &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#66d9ef">restrict&lt;/span> tp, &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#66d9ef">restrict&lt;/span> tzp);&lt;span style="color:#75715e">//获取当前时间，与其他相同作用函数相比，精度较高
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>自平衡二搜索树——红黑树</title><link>https://caisong.github.io/posts/%E7%BA%A2%E9%BB%91%E6%A0%91/</link><pubDate>Mon, 04 Jul 2016 22:25:06 +0800</pubDate><guid>https://caisong.github.io/posts/%E7%BA%A2%E9%BB%91%E6%A0%91/</guid><description>&lt;p>红黑树主要属性&lt;/p>
&lt;ol>
&lt;li>所有节点要么红色，要么黑色&lt;/li>
&lt;li>叶子节点都是黑色&lt;/li>
&lt;li>叶子节点不包含数据&lt;/li>
&lt;li>所有非叶子节点都有两个子节点&lt;/li>
&lt;li>如果一个节点是红色，那么它的子节点都是黑色&lt;/li>
&lt;/ol>



 &lt;blockquote>
 &lt;p>一个红色节点不能是其他红色节点的子节点或者父节点&lt;/p>

 &lt;/blockquote>

&lt;ol start="6">
&lt;li>在一个节点到其叶子节点的路径中，如果总是包含相同数据的黑色节点，则该路径相比其他路径是最短的。&lt;/li>
&lt;/ol>



 &lt;blockquote>
 &lt;p>从树的任何节点到其叶子节点的路径都具有相同数目的黑色节点，树里的最长路径则是红黑交替节点路径，所以最短路径必然是具有相同数量的黑色节点——只包含黑色节点的路径。因此，从根节点到叶子节点的最长路径都不会超过最短路径的两倍&lt;/p>

 &lt;/blockquote></description></item></channel></rss>